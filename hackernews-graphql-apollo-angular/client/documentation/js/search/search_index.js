var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.5","fields":["title","body"],"fieldVectors":[["title/dependencies.html",[0,2.142,1,2.368]],["body/dependencies.html",[1,2.741,2,4.301,3,0.035,4,6.28,5,4.301,6,4.301,7,1.538,8,3.576,9,4.301,10,4.346,11,3.765,12,4.301,13,3.098,14,4.301,15,4.301,16,3.485,17,3.331,18,4.301,19,0.515,20,3.576,21,4.301,22,4.301,23,2.741,24,3.576,25,4.301,26,3.576,27,4.301,28,4.301,29,4.346,30,4.301,31,4.301,32,4.301,33,4.301,34,0.987,35,4.301,36,1.68,37,4.301,38,4.301,39,4.301,40,4.301,41,4.301,42,1.29,43,3.576,44,4.301,45,4.301,46,4.301,47,0.028,48,0.028]],["title/index.html",[49,2.577,50,2.577,51,0.273]],["body/index.html",[3,0.028,17,3.578,26,3.551,47,0.028,48,0.028,52,5.206,53,5.845,54,5.615,55,4.272,56,4.272,57,4.272,58,5.206,59,6.169,60,6.169,61,4.272,62,4.272,63,4.272,64,4.272,65,3.551,66,4.272,67,4.272,68,4.272,69,0.332,70,0.275,71,4.272,72,4.272,73,1.285,74,0.391,75,2.204,76,2.631,77,4.272,78,5.992,79,4.272,80,3.551,81,4.272,82,4.272,83,4.272,84,2.002,85,4.272,86,5.206,87,5.992,88,5.206,89,5.206,90,4.272,91,5.845,92,4.272,93,4.272,94,4.272,95,5.615,96,4.272,97,4.272,98,4.272,99,3.077,100,4.272]],["title/overview.html",[101,3.509]],["body/overview.html",[1,2.62,3,0.034,47,0.027,48,0.027,73,0.941,99,2.961,101,3.418,102,1.926,103,3.418,104,1.986,105,3.418,106,3.418,107,0.319,108,3.418,109,3.418,110,3.418,111,3.418,112,3.418,113,2.39,114,4.157,115,1.973,116,1.973,117,2.156,118,2.156,119,2.156,120,2.156,121,2.156,122,2.156,123,2.156,124,2.848,125,3.152,126,3.152,127,4.227,128,3.418,129,2.961,130,4.111,131,3.418,132,2.961,133,5.085,134,0.497,135,4.111,136,0.163,137,2.62]],["title/modules.html",[104,1.648]],["body/modules.html",[3,0.03,11,3.547,47,0.03,48,0.03,104,1.923,114,3.138,124,2.54,125,2.812,138,4.924,139,4.924,140,5.961,141,5.663,142,2.654]],["title/modules/AppModule.html",[104,1.206,114,1.968]],["body/modules/AppModule.html",[1,2.152,3,0.035,7,1.207,8,2.807,10,2.807,11,2.432,47,0.024,48,0.024,69,0.262,70,0.218,99,2.432,102,1.582,103,4.182,104,1.75,105,4.182,106,4.182,107,0.348,108,2.807,109,2.807,110,2.807,111,2.807,112,2.807,113,2.407,114,4.117,115,2.049,116,2.049,117,2.239,118,2.239,119,2.239,120,2.239,121,2.239,122,2.239,123,2.239,124,2.957,125,3.273,126,3.273,127,3.726,128,2.807,134,0.408,143,0.309,144,3.377,145,1.193,146,4.482,147,4.482,148,3.228,149,3.377,150,3.377,151,2.807,152,2.807,153,2.152,154,2.807,155,3.726,156,2.152,157,3.377,158,1.75,159,2.432,160,2.807,161,3.377,162,2.807,163,2.432,164,2.807,165,2.807,166,3.377,167,2.807]],["title/modules/AppRoutingModule.html",[104,1.206,124,1.593]],["body/modules/AppRoutingModule.html",[3,0.035,7,1.423,13,2.867,47,0.027,48,0.027,69,0.309,70,0.257,73,1.344,104,1.555,107,0.387,115,1.782,117,1.555,119,1.946,120,1.946,121,1.946,123,1.946,124,2.571,129,2.867,131,3.31,134,0.481,137,3.634,143,0.364,145,1.17,148,3.59,152,3.31,153,2.537,154,3.31,155,3.31,158,1.946,159,2.867,160,3.31,162,3.31,164,3.31,165,3.31,167,3.31,168,3.981,169,4.984,170,3.981,171,3.981,172,1.304,173,6.078,174,5.99,175,5.99,176,4.984,177,3.981,178,3.981,179,3.31,180,0.544,181,3.31,182,3.31,183,3.981]],["title/modules/GraphQLModule.html",[104,1.206,125,1.764]],["body/modules/GraphQLModule.html",[0,3.918,3,0.035,7,1.303,16,3.402,17,3.003,19,0.505,20,4.342,23,3.003,24,3.031,29,4.59,34,0.688,42,1.413,43,3.031,47,0.025,48,0.025,69,0.283,70,0.235,74,0.333,75,2.694,104,1.424,107,0.366,125,2.691,129,2.626,134,0.441,143,0.333,145,1.152,148,3.395,172,1.951,184,3.646,185,4.713,186,4.713,187,3.646,188,4.713,189,5.223,190,4.713,191,3.646,192,4.713,193,1.709,194,3.646,195,3.646,196,3.646,197,3.646,198,3.646,199,3.646,200,3.031,201,3.646,202,3.646,203,3.646,204,3.646,205,3.646,206,3.646,207,4.713,208,3.031,209,4.713,210,3.646,211,3.031,212,3.031,213,4.713,214,3.031,215,5.223,216,3.646,217,2.04,218,4.713,219,4.713,220,3.646,221,3.646,222,3.918,223,3.646,224,3.646,225,3.646,226,1.303,227,3.646,228,3.646,229,3.646,230,3.646,231,3.646,232,3.646,233,3.646,234,4.713,235,3.646,236,3.646,237,1.709,238,3.646]],["title/components/AppComponent.html",[73,0.707,113,1.206]],["body/components/AppComponent.html",[3,0.035,7,1.359,19,0.443,47,0.026,48,0.026,51,0.402,65,4.024,69,0.295,70,0.245,73,1.325,74,0.487,102,1.781,107,0.295,113,2.19,115,1.359,116,1.359,117,1.484,118,1.484,119,1.484,120,1.484,121,1.484,122,1.484,123,1.484,126,3.38,134,0.459,143,0.348,145,0.914,158,1.484,163,2.737,180,0.519,226,1.359,237,1.781,239,2.17,240,2.17,241,1.244,242,3.16,243,1.73,244,3.394,245,2.17,246,3.234,247,3.234,248,4.84,249,2.497,250,4.84,251,2.497,252,4.84,253,0.914,254,5.607,255,1.585,256,3.573,257,1.96,258,3.16,259,0.727,260,4.84,261,1.96,262,0.585,263,3.801,264,2.764,265,0.741,266,1.359,267,1.359,268,2.422,269,3.801,270,2.764,271,2.764,272,2.764,273,3.202,274,2.17,275,2.17,276,2.17,277,2.17,278,2.17,279,2.17,280,2.17,281,2.17,282,2.17,283,2.17,284,2.17,285,2.17]],["title/components/CreateLinkComponent.html",[73,0.707,115,1.104]],["body/components/CreateLinkComponent.html",[3,0.035,7,1.024,13,2.064,16,3.513,17,1.826,19,0.482,34,0.541,47,0.022,48,0.022,51,0.303,69,0.223,70,0.185,73,1.205,74,0.423,80,2.382,102,1.343,107,0.223,113,1.119,115,1.789,116,1.024,117,1.119,118,1.119,119,1.119,120,1.119,121,1.119,122,1.119,123,1.119,124,1.478,132,2.064,134,0.346,143,0.262,145,1.058,151,2.382,153,3.642,158,1.119,172,1.639,180,0.765,200,2.382,208,2.382,212,2.382,214,2.382,226,1.024,237,2.165,239,1.636,240,1.636,241,0.938,243,1.432,244,2.945,245,1.636,246,3.095,247,3.095,249,2.067,251,2.067,253,0.757,255,1.312,256,3.189,257,2.067,259,0.765,261,1.478,262,0.636,264,2.288,265,0.835,266,1.432,267,1.432,270,2.288,271,2.288,272,2.288,273,2.857,274,1.636,275,1.636,276,1.636,277,1.636,278,1.636,279,1.636,280,1.636,281,1.636,282,1.636,283,1.636,284,1.636,285,1.636,286,4.752,287,2.382,288,4.007,289,4.007,290,1.205,291,6.153,292,1.205,293,2.131,294,4.007,295,2.865,296,2.865,297,2.865,298,2.865,299,2.865,300,1.652,301,1.432,302,0.938,303,2.382,304,2.865,305,2.865,306,1.954,307,2.865,308,2.865,309,0.597,310,2.382,311,4.621,312,4.621,313,4.621,314,4.621,315,2.865,316,1.119,317,3.331,318,0.656,319,1.386,320,0.656,321,1.343,322,2.165,323,2.865,324,1.565,325,1.119,326,1.119,327,1.119,328,1.119,329,1.119,330,2.865,331,2.865,332,2.865,333,4.007,334,1.878,335,2.865,336,2.865,337,2.865,338,1.712]],["title/components/FooterComponent.html",[73,0.707,122,1.206]],["body/components/FooterComponent.html",[3,0.035,7,1.432,19,0.458,47,0.027,48,0.027,51,0.424,69,0.311,70,0.258,73,1.346,74,0.458,102,1.877,107,0.311,113,1.565,115,1.432,116,1.432,117,1.565,118,1.565,119,1.565,120,1.565,121,1.565,122,2.232,123,1.565,134,0.484,143,0.366,145,0.756,158,1.565,180,0.547,237,1.877,239,2.288,240,2.288,241,1.312,243,1.789,244,3.477,245,2.288,246,3.257,247,3.257,249,2.581,251,2.581,255,1.638,256,3.642,257,2.815,259,0.683,264,2.288,270,2.857,271,2.857,272,2.857,273,3.263,274,2.288,275,2.288,276,2.288,277,2.288,278,2.288,279,2.288,280,2.288,281,2.288,282,2.288,283,2.288,284,2.288,285,2.288,339,3.331,340,5.004,341,5.004,342,5.004,343,4.006,344,4.006]],["title/components/HeaderComponent.html",[73,0.707,118,1.206]],["body/components/HeaderComponent.html",[3,0.035,7,1.261,19,0.422,47,0.025,48,0.025,51,0.373,69,0.274,70,0.228,73,1.295,74,0.47,75,2.812,102,1.653,107,0.274,113,1.378,115,1.261,116,1.261,117,1.378,118,2.129,119,1.378,120,1.378,121,1.378,122,1.378,123,1.378,126,3.314,134,0.426,143,0.323,145,0.971,158,1.378,163,2.541,179,3.836,180,0.482,181,3.836,182,3.836,222,3.836,226,1.261,237,2.162,239,2.015,240,2.015,241,1.155,243,1.649,244,3.276,245,2.015,246,3.2,247,3.2,249,2.38,251,2.38,253,0.871,255,1.511,256,3.474,257,1.82,258,2.933,259,0.745,261,1.82,262,0.557,264,2.634,266,1.261,267,1.649,268,2.249,270,2.634,271,2.634,272,2.634,273,3.113,274,2.015,275,2.015,276,2.015,277,2.015,278,2.015,279,2.015,280,2.015,281,2.015,282,2.015,283,2.015,284,2.015,285,2.015,310,4.532,338,1.971,345,2.933,346,4.614,347,4.614,348,5.804,349,4.614,350,3.529,351,3.529,352,1.683,353,3.323,354,3.529,355,3.529,356,3.529,357,3.529,358,2.933,359,3.529,360,1.653,361,3.529,362,3.529,363,2.541,364,3.529,365,4.614]],["title/components/LinkItemComponent.html",[73,0.707,116,1.104]],["body/components/LinkItemComponent.html",[3,0.035,7,1.153,16,1.842,19,0.571,23,2.055,42,0.967,47,0.023,48,0.023,51,0.557,69,0.251,70,0.208,73,1.257,74,0.45,75,1.664,102,1.511,107,0.338,113,1.26,115,1.153,116,1.881,117,1.26,118,1.26,119,1.26,120,1.26,121,1.26,122,1.26,123,1.26,134,0.525,143,0.295,145,1.037,156,3.747,158,1.92,180,0.44,226,1.153,237,2.304,239,1.842,240,1.842,241,1.056,245,1.842,246,3.156,247,3.156,249,2.242,251,2.242,255,1.423,257,2.536,259,0.79,261,1.664,262,0.684,264,1.842,265,0.753,266,1.554,267,1.554,268,2.055,270,2.482,271,2.482,272,2.482,273,3.004,274,1.842,275,1.842,276,1.842,277,1.842,278,1.842,279,1.842,280,1.842,281,1.842,282,1.842,283,1.842,284,1.842,285,1.842,319,1.304,352,1.423,353,3.131,363,3.541,366,4.235,367,2.323,368,3.613,369,3.613,370,4.374,371,4.347,372,4.703,373,4.374,374,3.353,375,4.347,376,0.821,377,3.225,378,3.225,379,3.225,380,1.511,381,4.374,382,3.225,383,3.613,384,3.225,385,2.681,386,2.055,387,2.681,388,2.681,389,2.681,390,2.323,391,2.681,392,2.681,393,4.347,394,4.347,395,4.347,396,4.347,397,0.821,398,4.347,399,4.347,400,4.347,401,4.347]],["title/routes.html",[137,2.69]],["body/routes.html",[3,0.031,47,0.031,48,0.031,137,3.22]],["title/classes/CommentVote.html",[134,0.373,402,0.643]],["body/classes/CommentVote.html",[3,0.035,19,0.563,34,1.062,47,0.018,48,0.018,51,0.232,69,0.171,70,0.142,74,0.201,76,2.419,84,1.547,107,0.422,134,0.723,136,0.187,142,2.419,143,0.201,180,0.3,193,1.028,241,0.719,243,0.785,253,0.894,255,1.081,259,0.603,262,0.727,265,0.861,266,1.18,267,1.18,290,0.756,292,0.756,309,1.307,318,0.502,320,0.502,321,1.86,322,2.331,334,2.069,338,2.023,360,1.028,376,0.749,380,1.028,397,1.151,402,1.106,403,1.028,404,2.9,405,2.048,406,2.048,407,2.048,408,1.451,409,2.856,410,3.049,411,2.74,412,2.9,413,2.74,414,2.269,415,2.195,416,3.049,417,3.049,418,2.195,419,1.411,420,1.108,421,2.278,422,1.132,423,0.986,424,1.887,425,2.278,426,1.132,427,1.132,428,2.566,429,1.132,430,1.132,431,1.132,432,1.132,433,2.278,434,2.048,435,2.442,436,1.703,437,1.132,438,1.132,439,1.132,440,1.132,441,0.551,442,1.132,443,0.828,444,1.703,445,1.703,446,1.703,447,1.703,448,1.132,449,1.132,450,1.132,451,1.132,452,1.132,453,1.132,454,0.828,455,1.132,456,1.132,457,1.132,458,1.132,459,1.132,460,1.132,461,1.703,462,2.278,463,1.132,464,1.132,465,1.132,466,1.132,467,1.132,468,1.703,469,1.132]],["title/classes/LinkUpvoteEvent.html",[134,0.373,374,1.968]],["body/classes/LinkUpvoteEvent.html",[3,0.035,7,1.484,16,2.371,19,0.578,23,2.646,42,1.245,47,0.027,48,0.027,51,0.439,69,0.323,70,0.268,73,1.171,74,0.38,75,2.142,107,0.398,116,1.484,134,0.67,143,0.38,145,1.122,156,3.26,158,1.621,226,1.484,237,1.946,246,2.142,247,2.142,249,2.142,251,2.142,257,2.639,259,0.567,261,2.142,262,0.618,265,0.636,268,2.646,319,1.245,352,1.36,353,2.99,363,2.99,366,3.685,367,2.99,368,3.452,369,3.452,370,3.452,372,4.812,373,4.253,374,3.534,376,0.784,381,4.61,383,3.452,386,2.646,387,3.452,388,3.452,389,3.452,390,2.99,391,3.452,392,3.452,470,4.152,471,4.152]],["title/classes/ManagedByGraphCool.html",[134,0.373,414,1.32]],["body/classes/ManagedByGraphCool.html",[3,0.035,19,0.56,34,1.101,47,0.017,48,0.017,51,0.225,69,0.165,70,0.137,74,0.195,76,2.393,84,1.512,107,0.419,134,0.728,136,0.185,142,2.393,143,0.195,180,0.441,193,0.997,241,0.697,243,1.153,253,0.928,255,1.056,259,0.698,262,0.737,265,0.906,266,1.153,267,1.153,290,0.738,292,0.738,309,1.278,318,0.487,320,0.487,321,2.189,322,2.189,334,1.825,338,1.996,360,0.997,376,0.736,380,0.997,397,1.137,402,0.973,403,0.997,404,2.833,405,1.664,406,1.664,407,1.664,408,1.427,409,2.779,410,3.073,411,2.635,412,2.879,413,2.779,414,2.302,416,2.983,417,2.983,419,1.664,420,1.352,421,2.536,422,1.098,423,1.144,424,2.248,425,2.714,426,1.664,427,1.664,428,2.833,429,1.664,430,1.664,431,1.664,432,1.664,433,2.714,434,2.242,435,2.714,436,2.242,437,1.098,438,1.098,439,1.098,440,1.098,441,0.534,442,1.098,443,0.809,444,1.664,445,1.664,446,1.664,447,1.664,448,1.098,449,1.098,450,1.098,451,1.098,452,1.098,453,1.098,454,0.809,455,1.098,456,1.098,457,1.098,458,1.098,459,1.098,460,1.098,461,1.664,462,2.242,463,1.098,464,1.098,465,1.098,466,1.098,467,1.098,468,1.664,469,1.098,472,2.128,473,2.128,474,2.128]],["title/classes/Vote.html",[134,0.373,397,0.583]],["body/classes/Vote.html",[3,0.035,19,0.572,34,1.062,47,0.018,48,0.018,51,0.232,69,0.171,70,0.142,74,0.201,76,2.419,84,1.861,107,0.422,134,0.723,136,0.187,142,2.419,143,0.201,180,0.3,193,1.029,241,0.719,243,0.785,253,0.894,255,1.082,259,0.603,262,0.727,265,0.861,266,1.181,267,1.181,290,0.756,292,0.756,309,1.305,318,0.503,320,0.503,321,1.861,322,2.332,334,1.861,338,2.126,360,1.029,376,0.75,380,1.029,397,1.167,402,0.986,403,1.029,404,2.856,405,2.049,406,2.049,407,2.049,408,1.431,409,2.856,410,3.049,411,2.74,412,2.901,413,2.74,414,2.27,416,3.049,417,3.049,419,1.412,420,1.108,421,2.279,422,1.133,423,0.986,424,1.887,425,2.279,426,1.133,427,1.133,428,2.567,429,1.133,430,1.133,431,1.133,432,1.133,433,2.279,434,2.049,435,2.443,436,1.704,437,1.133,438,1.133,439,1.133,440,1.133,441,0.551,442,1.133,443,0.829,444,1.704,445,1.704,446,1.704,447,1.704,448,1.133,449,1.133,450,1.133,451,1.133,452,1.133,453,1.133,454,0.829,455,1.133,456,1.133,457,1.133,458,1.704,459,1.704,460,1.133,461,1.704,462,2.279,463,1.133,464,1.133,465,1.133,466,1.133,467,1.133,468,1.704,469,1.133,475,2.197,476,2.197]],["title/interfaces/AllLinkQueryResponse.html",[136,0.122,477,1.104]],["body/interfaces/AllLinkQueryResponse.html",[3,0.035,19,0.534,34,0.491,36,1.016,42,1.122,47,0.02,48,0.02,51,0.275,69,0.202,70,0.168,74,0.519,107,0.472,136,0.225,143,0.238,145,0.706,172,1.825,180,0.511,217,1.871,253,0.706,259,0.598,262,0.639,265,0.893,290,1.276,292,1.276,293,1.461,300,0.93,301,0.93,302,0.852,306,1.711,309,1.257,316,1.871,318,1.21,319,0.78,320,1.003,324,1.461,325,1.711,326,1.016,327,1.711,328,1.711,329,1.016,352,1.825,376,0.706,397,1.029,402,0.542,408,0.595,420,1.594,423,1.057,441,1.326,443,1.099,454,1.367,477,1.338,478,1.016,479,2.259,480,2.259,481,2.426,482,1.93,483,2.601,484,2.601,485,2.601,486,2.426,487,1.111,488,2.047,489,1.111,490,1.111,491,1.016,492,1.111,493,2.382,494,1.111,495,1.599,496,0.93,497,1.111,498,1.599,499,1.016,500,1.111,501,0.93,502,1.016,503,1.111,504,1.872,505,1.111,506,1.111,507,0.93,508,1.111,509,1.016,510,1.111,511,1.111,512,1.111,513,1.599,514,1.111,515,0.93,516,1.016,517,1.111,518,1.599,519,2.047,520,0.93,521,1.016,522,1.111,523,0.93]],["title/interfaces/AllLinksSearchQueryResponse.html",[136,0.122,515,1.104]],["body/interfaces/AllLinksSearchQueryResponse.html",[3,0.035,19,0.534,34,0.491,36,1.016,42,1.122,47,0.02,48,0.02,51,0.275,69,0.202,70,0.168,74,0.519,107,0.472,136,0.225,143,0.238,145,0.706,172,1.825,180,0.511,217,1.871,253,0.706,259,0.598,262,0.639,265,0.893,290,1.276,292,1.276,293,1.461,300,0.93,301,0.93,302,0.852,306,1.711,309,1.257,316,1.871,318,1.21,319,0.78,320,1.003,324,1.461,325,1.711,326,1.016,327,1.711,328,1.711,329,1.016,352,1.825,376,0.706,397,1.029,402,0.542,408,0.595,420,1.594,423,1.057,441,1.326,443,1.099,454,1.367,477,0.93,478,1.016,479,2.259,480,2.259,481,2.426,482,1.93,486,2.426,487,1.111,488,2.047,489,1.111,490,1.111,491,1.016,492,1.111,493,2.382,494,1.111,495,1.599,496,0.93,497,1.111,498,1.599,499,1.016,500,1.111,501,0.93,502,1.016,503,1.111,504,1.872,505,1.111,506,1.111,507,0.93,508,1.111,509,1.016,510,1.111,511,1.111,512,1.111,513,1.599,514,1.111,515,1.338,516,1.016,517,1.111,518,1.599,519,2.047,520,0.93,521,1.016,522,1.111,523,0.93,524,2.601,525,2.601,526,2.601]],["title/interfaces/CreateLinkMutationResponse.html",[136,0.122,302,1.011]],["body/interfaces/CreateLinkMutationResponse.html",[3,0.035,19,0.534,34,0.491,36,1.016,42,1.122,47,0.02,48,0.02,51,0.275,69,0.202,70,0.168,74,0.519,107,0.472,136,0.225,143,0.238,145,0.706,172,1.825,180,0.511,217,1.871,253,0.706,259,0.598,262,0.639,265,0.893,290,1.276,292,1.276,293,1.983,300,0.93,301,0.93,302,1.225,306,1.711,309,1.257,316,1.871,318,1.21,319,0.78,320,1.003,324,1.461,325,1.711,326,1.016,327,1.711,328,1.711,329,1.016,352,1.825,376,0.706,397,1.029,402,0.542,408,0.595,420,1.594,423,1.057,441,1.425,443,1.099,454,1.367,477,0.93,478,1.016,479,1.872,480,1.872,481,2.426,482,1.93,486,2.426,487,1.111,488,2.047,489,1.111,490,1.111,491,1.016,492,1.111,493,2.382,494,1.111,495,1.599,496,0.93,497,1.111,498,1.599,499,1.016,500,1.111,501,0.93,502,1.016,503,1.111,504,1.872,505,1.111,506,1.111,507,0.93,508,1.111,509,1.016,510,1.111,511,1.111,512,1.111,513,1.599,514,1.111,515,0.93,516,1.016,517,1.111,518,1.599,519,2.047,520,0.93,521,1.016,522,1.111,523,0.93,527,2.601,528,2.601,529,2.601]],["title/interfaces/CreateUserMutationResponse.html",[136,0.122,496,1.104]],["body/interfaces/CreateUserMutationResponse.html",[3,0.035,19,0.519,34,0.491,36,1.016,42,1.122,47,0.02,48,0.02,51,0.275,69,0.202,70,0.168,74,0.519,107,0.472,136,0.225,143,0.238,145,0.706,172,1.825,180,0.511,217,1.871,253,0.706,259,0.598,262,0.639,265,0.893,290,1.276,292,1.276,293,1.461,300,0.93,301,0.93,302,0.852,306,1.711,309,1.271,316,1.871,318,1.21,319,0.78,320,1.003,324,1.461,325,1.711,326,1.016,327,1.711,328,1.711,329,1.016,352,1.825,376,0.706,397,1.029,402,0.542,408,0.595,420,1.594,423,1.057,441,1.326,443,1.099,454,1.367,477,0.93,478,1.016,479,1.872,480,1.872,481,2.426,482,1.93,486,2.426,487,1.111,488,2.047,489,1.111,490,1.111,491,1.016,492,1.111,493,2.382,494,1.111,495,1.599,496,1.338,497,2.047,498,2.169,499,1.016,500,1.111,501,0.93,502,1.016,503,1.111,504,1.872,505,1.111,506,1.111,507,0.93,508,1.111,509,1.016,510,1.111,511,1.111,512,1.111,513,1.599,514,1.111,515,0.93,516,1.016,517,1.111,518,1.599,519,2.047,520,0.93,521,1.016,522,1.111,523,0.93,530,2.601,531,2.601,532,2.601]],["title/interfaces/CreateVoteMutationResponse.html",[136,0.122,507,1.104]],["body/interfaces/CreateVoteMutationResponse.html",[3,0.035,19,0.52,34,0.496,36,1.025,42,1.13,47,0.02,48,0.02,51,0.278,69,0.204,70,0.169,74,0.52,107,0.472,136,0.225,143,0.24,145,0.711,172,1.83,180,0.514,217,1.88,253,0.711,259,0.514,262,0.616,265,0.895,290,1.279,292,1.279,293,1.471,300,0.939,301,0.939,302,0.86,306,1.72,309,1.258,316,1.88,318,1.214,319,0.787,320,1.008,324,1.471,325,1.72,326,1.025,327,1.72,328,1.72,329,1.025,352,1.83,376,0.711,397,1.031,402,0.547,408,0.601,420,1.595,423,1.061,441,1.331,443,1.105,454,1.371,477,0.939,478,1.025,479,1.882,480,1.882,481,2.431,482,1.943,486,2.431,487,1.122,488,2.056,489,1.122,490,1.122,491,1.025,492,1.122,493,2.388,494,1.122,495,1.609,496,0.939,497,1.122,498,1.609,499,1.025,500,1.122,501,0.939,502,1.025,503,1.122,504,1.882,505,1.122,506,1.122,507,1.347,508,2.056,509,1.025,510,1.122,511,1.122,512,1.122,513,1.609,514,1.122,515,0.939,516,1.025,517,1.122,518,1.609,519,2.056,520,0.939,521,1.025,522,1.122,523,0.939,533,2.626,534,2.626]],["title/interfaces/CreatedAt.html",[136,0.122,423,0.643]],["body/interfaces/CreatedAt.html",[3,0.035,19,0.564,34,1.054,47,0.018,48,0.018,51,0.24,69,0.176,70,0.146,74,0.208,76,2.361,84,1.587,107,0.426,134,0.723,136,0.206,142,2.361,143,0.208,180,0.31,193,1.064,226,0.812,241,0.743,243,0.812,253,0.907,255,1.109,259,0.553,262,0.718,265,0.888,266,1.211,267,1.448,290,0.775,292,0.775,309,1.288,318,0.52,320,0.52,321,1.898,322,2.251,334,1.898,338,2.052,360,1.064,376,0.765,380,1.064,397,1.147,402,1,403,1.064,404,2.829,405,1.747,406,1.747,407,1.747,408,1.435,409,2.88,410,3.02,411,2.693,412,2.88,413,2.693,414,2.23,416,3.02,417,3.02,419,1.447,420,1.127,421,2.478,422,1.747,423,1.142,424,1.919,425,2.316,426,1.171,427,1.171,428,2.599,429,1.171,430,1.171,431,1.171,432,1.171,433,2.316,434,2.089,435,2.478,436,1.747,437,1.171,438,1.171,439,1.171,440,1.171,441,0.57,442,1.171,443,0.85,444,1.747,445,1.747,446,1.747,447,1.747,448,1.171,449,1.171,450,1.171,451,1.171,452,1.171,453,1.171,454,0.85,455,1.171,456,1.171,457,1.171,458,1.171,459,1.171,460,1.171,461,1.747,462,2.316,463,1.171,464,1.171,465,1.171,466,1.171,467,1.171,468,1.747,469,1.171,535,2.27]],["title/interfaces/NewLinkSubcriptionResponse.html",[136,0.122,520,1.104]],["body/interfaces/NewLinkSubcriptionResponse.html",[3,0.035,19,0.536,34,0.502,36,1.037,42,1.139,47,0.02,48,0.02,51,0.281,69,0.206,70,0.171,74,0.522,107,0.473,136,0.226,143,0.243,145,0.717,172,1.836,180,0.519,217,1.889,253,0.717,259,0.363,262,0.459,265,0.897,290,1.283,292,1.283,293,1.483,300,0.95,301,0.95,302,0.87,306,1.731,309,1.261,316,1.889,318,1.219,319,0.797,320,1.015,324,1.483,325,1.731,326,1.037,327,1.731,328,1.731,329,1.037,352,1.743,376,0.717,397,1.035,402,0.553,408,0.608,420,1.596,423,1.066,441,1.336,443,1.112,454,1.375,477,0.95,478,1.037,479,1.894,480,1.894,481,2.275,486,2.438,487,1.135,488,2.067,489,1.135,490,1.135,491,1.037,492,1.135,493,2.395,494,1.135,495,1.623,496,0.95,497,1.135,498,1.623,499,1.037,500,1.135,501,0.95,502,1.037,503,1.135,504,1.894,505,1.135,506,1.135,507,0.95,508,1.135,509,1.037,510,1.135,511,1.135,512,1.135,513,1.623,514,1.135,515,0.95,516,1.037,517,1.135,518,1.623,519,2.342,520,1.358,521,1.037,522,1.135,523,0.95,536,2.656]],["title/interfaces/NewVoteSubcriptionResponse.html",[136,0.122,523,1.104]],["body/interfaces/NewVoteSubcriptionResponse.html",[3,0.035,19,0.522,34,0.502,36,1.037,42,1.139,47,0.02,48,0.02,51,0.281,69,0.206,70,0.171,74,0.522,107,0.473,136,0.226,143,0.243,145,0.717,172,1.836,180,0.519,217,1.889,253,0.717,259,0.363,262,0.459,265,0.897,290,1.283,292,1.283,293,1.483,300,0.95,301,0.95,302,0.87,306,1.731,309,1.261,316,1.889,318,1.219,319,0.797,320,1.015,324,1.483,325,1.731,326,1.037,327,1.731,328,1.731,329,1.037,352,1.743,376,0.717,397,1.077,402,0.553,408,0.608,420,1.596,423,1.066,441,1.336,443,1.112,454,1.375,477,0.95,478,1.037,479,1.894,480,1.894,481,2.275,486,2.438,487,1.135,488,2.067,489,1.135,490,1.135,491,1.037,492,1.135,493,2.395,494,1.135,495,1.623,496,0.95,497,1.135,498,1.623,499,1.037,500,1.135,501,0.95,502,1.037,503,1.135,504,1.894,505,1.135,506,1.135,507,0.95,508,1.135,509,1.037,510,1.135,511,1.135,512,1.135,513,1.623,514,1.135,515,0.95,516,1.037,517,1.135,518,1.623,519,2.342,520,0.95,521,1.037,522,1.135,523,1.358,537,2.656]],["title/interfaces/SigninUserMutationResponse.html",[136,0.122,501,1.104]],["body/interfaces/SigninUserMutationResponse.html",[3,0.035,19,0.52,34,0.496,36,1.025,42,1.13,47,0.02,48,0.02,51,0.278,69,0.204,70,0.169,74,0.52,107,0.472,136,0.225,143,0.24,145,0.711,172,1.83,180,0.514,217,1.88,253,0.711,259,0.514,262,0.616,265,0.895,290,1.279,292,1.279,293,1.471,300,0.939,301,0.939,302,0.86,306,1.72,309,1.258,316,1.88,318,1.214,319,0.787,320,1.008,324,1.471,325,1.72,326,1.025,327,1.72,328,1.72,329,1.025,352,1.83,376,0.711,397,1.031,402,0.547,408,0.601,420,1.595,423,1.061,441,1.331,443,1.105,454,1.371,477,0.939,478,1.025,479,1.882,480,1.882,481,2.431,482,1.943,486,2.431,487,1.122,488,2.056,489,1.122,490,1.122,491,1.025,492,1.122,493,2.388,494,1.122,495,1.609,496,0.939,497,1.122,498,2.177,499,1.025,500,1.122,501,1.347,502,1.025,503,1.122,504,1.882,505,1.122,506,1.122,507,0.939,508,1.122,509,1.025,510,1.122,511,1.122,512,1.122,513,1.609,514,1.122,515,0.939,516,1.025,517,1.122,518,1.609,519,2.056,520,0.939,521,1.025,522,1.122,523,0.939,538,2.626,539,2.626]],["title/interfaces/UniqueId.html",[136,0.122,419,1.32]],["body/interfaces/UniqueId.html",[3,0.035,19,0.563,34,1.052,47,0.018,48,0.018,51,0.239,69,0.175,70,0.145,74,0.206,76,2.354,84,1.578,107,0.425,134,0.722,136,0.206,142,2.354,143,0.206,180,0.308,193,1.056,226,0.806,241,0.738,243,1.204,253,0.904,255,1.103,259,0.551,262,0.717,265,0.886,266,1.204,267,1.204,290,0.771,292,0.771,309,1.287,318,0.516,320,0.516,321,1.89,322,2.244,334,1.89,338,2.046,360,1.056,376,0.761,380,1.056,397,1.146,402,0.997,403,1.056,404,2.823,405,1.738,406,1.738,407,1.738,408,1.434,409,2.875,410,3.015,411,2.762,412,2.918,413,2.686,414,2.225,416,3.015,417,3.015,419,1.723,420,1.373,421,2.308,422,1.163,423,0.997,424,1.912,425,2.308,426,1.163,427,1.163,428,2.592,429,1.163,430,1.163,431,1.163,432,1.163,433,2.308,434,2.47,435,2.47,436,1.738,437,1.163,438,1.163,439,1.163,440,1.163,441,0.566,442,1.163,443,0.845,444,1.738,445,1.738,446,1.738,447,1.738,448,1.163,449,1.163,450,1.163,451,1.163,452,1.163,453,1.163,454,0.845,455,1.163,456,1.163,457,1.163,458,1.163,459,1.163,460,1.163,461,1.738,462,2.308,463,1.163,464,1.163,465,1.163,466,1.163,467,1.163,468,1.738,469,1.163,540,2.254,541,2.254,542,2.254,543,1.874,544,2.254]],["title/interfaces/UpdatedAt.html",[136,0.122,424,1.32]],["body/interfaces/UpdatedAt.html",[3,0.035,19,0.564,34,1.054,47,0.018,48,0.018,51,0.24,69,0.176,70,0.146,74,0.207,76,2.36,84,1.586,107,0.426,134,0.723,136,0.206,142,2.36,143,0.207,180,0.31,193,1.063,226,0.811,241,0.743,243,0.811,253,0.907,255,1.108,259,0.553,262,0.718,265,0.888,266,1.21,267,1.447,290,0.775,292,0.775,309,1.288,318,0.519,320,0.519,321,2.103,322,2.25,334,1.897,338,2.052,360,1.586,376,0.764,380,1.063,397,1.147,402,1,403,1.063,404,2.828,405,1.746,406,1.746,407,1.746,408,1.435,409,2.879,410,3.019,411,2.692,412,2.879,413,2.692,414,2.23,416,3.019,417,3.019,419,1.446,420,1.126,421,2.477,422,1.17,423,1,424,2.292,425,2.315,426,1.17,427,1.17,428,2.598,429,1.17,430,1.17,431,1.17,432,1.17,433,2.315,434,2.088,435,2.477,436,1.746,437,1.17,438,1.17,439,1.17,440,1.17,441,0.569,442,1.17,443,0.849,444,1.746,445,1.746,446,1.746,447,1.746,448,1.17,449,1.17,450,1.17,451,1.17,452,1.17,453,1.17,454,0.849,455,1.17,456,1.17,457,1.17,458,1.17,459,1.17,460,1.17,461,1.746,462,2.315,463,1.17,464,1.17,465,1.17,466,1.17,467,1.17,468,1.746,469,1.17,545,2.268]],["title/miscellaneous/functions.html",[546,2.142,547,2.677]],["body/miscellaneous/functions.html",[3,0.033,47,0.03,48,0.03,51,0.505,74,0.509,226,1.989,261,2.87,262,0.672,265,0.852,358,3.969,376,1.145,385,3.969,386,3.545,390,3.439,546,3.969,547,3.439,548,4.625,549,3.969,550,4.775,551,5.563]],["title/coverage.html",[552,3.509]],["body/coverage.html",[3,0.035,19,0.295,47,0.023,48,0.023,70,0.208,73,1.378,75,1.664,113,1.26,115,1.153,116,1.153,117,1.26,118,1.26,119,1.26,120,1.26,121,1.26,122,1.26,123,1.26,126,1.842,132,2.323,134,0.699,136,0.24,153,2.055,156,2.77,158,1.697,159,2.323,211,2.681,242,2.681,262,0.39,286,2.681,287,2.681,300,1.153,301,1.153,302,1.056,303,2.681,309,0.672,317,5.119,319,1.939,339,2.681,345,2.681,366,3.541,367,3.131,374,2.055,386,2.055,397,0.609,402,0.672,403,2.791,408,0.738,414,1.378,419,1.378,423,0.672,424,1.378,477,1.153,478,2.439,491,1.26,496,1.153,499,1.26,501,1.153,502,1.26,507,1.153,509,1.26,515,1.153,516,1.26,520,1.153,521,1.26,523,1.153,543,2.681,547,3.131,548,2.681,549,3.613,552,2.681,553,3.225,554,3.225,555,3.225,556,5.492,557,6.221,558,3.225,559,4.916,560,4.916,561,3.225,562,3.225,563,3.225,564,4.916,565,3.225,566,3.225,567,3.225,568,4.347,569,3.225,570,3.225,571,3.225,572,4.916,573,3.225,574,5.658,575,4.347,576,4.347,577,3.225,578,3.225,579,4.916,580,4.916,581,3.225,582,4.347,583,3.225,584,3.225]]],"invertedIndex":[["",{"_index":3,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"routes.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["0",{"_index":319,"title":{},"body":{"components/CreateLinkComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["0.12.3",{"_index":35,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":46,"title":{},"body":{"dependencies.html":{}}}],["0.9.5",{"_index":44,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":131,"title":{},"body":{"overview.html":{},"modules/AppRoutingModule.html":{}}}],["1.0.1",{"_index":18,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":21,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":30,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":28,"title":{},"body":{"dependencies.html":{}}}],["1.1.7",{"_index":25,"title":{},"body":{"dependencies.html":{}}}],["1.6.7",{"_index":56,"title":{},"body":{"index.html":{}}}],["1/2",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":130,"title":{},"body":{"overview.html":{}}}],["100",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":135,"title":{},"body":{"overview.html":{}}}],["2",{"_index":213,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["2.2.2",{"_index":27,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":33,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":37,"title":{},"body":{"dependencies.html":{}}}],["25",{"_index":326,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["3",{"_index":129,"title":{},"body":{"overview.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{}}}],["3/3",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["4.14.104",{"_index":15,"title":{},"body":{"dependencies.html":{}}}],["4.17.5",{"_index":39,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["5.2.0",{"_index":4,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":41,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":133,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["_alllinksmeta",{"_index":479,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["access",{"_index":450,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["accord",{"_index":430,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["actual",{"_index":440,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["actual_compon",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["ad",{"_index":192,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["addit",{"_index":193,"title":{},"body":{"modules/GraphQLModule.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["adress",{"_index":455,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["all_links_queri",{"_index":300,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["all_links_search_queri",{"_index":509,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["alllink",{"_index":480,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["alllinkqueryrespons",{"_index":477,"title":{"interfaces/AllLinkQueryResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["alllinks(filt",{"_index":511,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["alllinksqueri",{"_index":487,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["alllinkssearchquery($searchtext",{"_index":510,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["alllinkssearchqueryrespons",{"_index":515,"title":{"interfaces/AllLinksSearchQueryResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["and/or",{"_index":406,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["angular",{"_index":17,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{}}}],["angular/anim",{"_index":2,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":5,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":187,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["angular/compil",{"_index":6,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":7,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["angular/form",{"_index":8,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{}}}],["angular/http",{"_index":9,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":10,"title":{},"body":{"dependencies.html":{},"modules/AppModule.html":{}}}],["angular/rout",{"_index":13,"title":{},"body":{"dependencies.html":{},"modules/AppRoutingModule.html":{},"components/CreateLinkComponent.html":{}}}],["apollo",{"_index":16,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["apollo.config",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["apollo.cr",{"_index":231,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollolink",{"_index":208,"title":{},"body":{"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{}}}],["apollolink.split",{"_index":232,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["apollomodul",{"_index":188,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["app",{"_index":65,"title":{},"body":{"index.html":{},"components/AppComponent.html":{}}}],["app.compon",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":250,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["app.rout",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/CreateLinkComponent.html":{}}}],["app.util",{"_index":387,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["appcompon",{"_index":113,"title":{"components/AppComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["applic",{"_index":412,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["appmodul",{"_index":114,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["approutingmodul",{"_index":124,"title":{"modules/AppRoutingModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateLinkComponent.html":{}}}],["artifact",{"_index":79,"title":{},"body":{"index.html":{}}}],["asynciter",{"_index":199,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["auth.servic",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["authend",{"_index":448,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["authenticateus",{"_index":495,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["author",{"_index":219,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["authservic",{"_index":126,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["authtoken",{"_index":230,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["automat",{"_index":66,"title":{},"body":{"index.html":{}}}],["avail",{"_index":142,"title":{},"body":{"modules.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["backend",{"_index":427,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["bearer",{"_index":220,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["beta.0",{"_index":22,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":352,"title":{},"body":{"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["bootstrap",{"_index":105,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["brows",{"_index":140,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":11,"title":{},"body":{"dependencies.html":{},"modules.html":{},"modules/AppModule.html":{}}}],["browsermodul",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":78,"title":{},"body":{"index.html":{}}}],["cach",{"_index":23,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["cast",{"_index":417,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["caution",{"_index":191,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["chang",{"_index":68,"title":{},"body":{"index.html":{}}}],["check",{"_index":98,"title":{},"body":{"index.html":{}}}],["children",{"_index":469,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["class",{"_index":134,"title":{"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["cli",{"_index":54,"title":{},"body":{"index.html":{}}}],["client",{"_index":26,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":108,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_bootstrap",{"_index":111,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_declar",{"_index":109,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_import",{"_index":110,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["cluster_appmodule_provid",{"_index":112,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["code",{"_index":71,"title":{},"body":{"index.html":{}}}],["comment",{"_index":408,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["commentcount",{"_index":320,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["commentupvot",{"_index":457,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["commentvot",{"_index":402,"title":{"classes/CommentVote.html":{}},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["common",{"_index":429,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["compon",{"_index":73,"title":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}},"body":{"index.html":{},"overview.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["component/cr",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component/footer/footer.compon",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["component/header/header.compon",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["component/link",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component/login/login.compon",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component/main/main.compon",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component/search/search.compon",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component/top/top.compon",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component_templ",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["connectionparam",{"_index":229,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["console.error('no",{"_index":308,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["console.error(error",{"_index":337,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["console.log",{"_index":333,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["const",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["constant",{"_index":212,"title":{},"body":{"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{}}}],["constructor",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["constructor(apollo",{"_index":214,"title":{},"body":{"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{}}}],["constructor(authservic",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{}}}],["constructor(link",{"_index":470,"title":{},"body":{"classes/LinkUpvoteEvent.html":{}}}],["constructor(priv",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["content",{"_index":459,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["core",{"_index":31,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":443,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["coverag",{"_index":552,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["create_link_mut",{"_index":301,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["create_user_mut",{"_index":491,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["create_vote_mut",{"_index":502,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["createdat",{"_index":423,"title":{"interfaces/CreatedAt.html":{}},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["createdat_desc",{"_index":329,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createlink",{"_index":293,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createlinkcompon",{"_index":115,"title":{"components/CreateLinkComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["createlinkmut",{"_index":490,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createlinkmutationrespons",{"_index":302,"title":{"interfaces/CreateLinkMutationResponse.html":{}},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["createus",{"_index":497,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createusermutation($nam",{"_index":492,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createusermutationrespons",{"_index":496,"title":{"interfaces/CreateUserMutationResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["createvot",{"_index":508,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createvote(userid",{"_index":505,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createvotemutation($userid",{"_index":503,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["createvotemutationrespons",{"_index":507,"title":{"interfaces/CreateVoteMutationResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["creation",{"_index":422,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["current",{"_index":358,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["data",{"_index":322,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["data.alllinks.push(createlink",{"_index":330,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["dataproxi",{"_index":388,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["date",{"_index":385,"title":{},"body":{"components/LinkItemComponent.html":{},"miscellaneous/functions.html":{}}}],["datetim",{"_index":421,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["declar",{"_index":103,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["deep",{"_index":464,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["default",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["defin",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["depend",{"_index":1,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{},"modules/AppModule.html":{}}}],["depth",{"_index":467,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["describ",{"_index":439,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["descript",{"_index":290,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["description_contain",{"_index":514,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["dev",{"_index":62,"title":{},"body":{"index.html":{}}}],["develop",{"_index":57,"title":{},"body":{"index.html":{}}}],["differ",{"_index":359,"title":{},"body":{"components/HeaderComponent.html":{}}}],["direct",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":77,"title":{},"body":{"index.html":{}}}],["directori",{"_index":82,"title":{},"body":{"index.html":{}}}],["dispatchupvoteev",{"_index":370,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["dist",{"_index":81,"title":{},"body":{"index.html":{}}}],["distinctuntilchang",{"_index":356,"title":{},"body":{"components/HeaderComponent.html":{}}}],["document",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["dynam",{"_index":12,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":92,"title":{},"body":{"index.html":{}}}],["element",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["email",{"_index":454,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["emit",{"_index":357,"title":{},"body":{"components/HeaderComponent.html":{}}}],["end",{"_index":91,"title":{},"body":{"index.html":{}}}],["environ",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["error",{"_index":200,"title":{},"body":{"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{}}}],["esnext",{"_index":203,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["event",{"_index":380,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["eventemitt",{"_index":381,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["exampl",{"_index":541,"title":{},"body":{"interfaces/UniqueId.html":{}}}],["execut",{"_index":88,"title":{},"body":{"index.html":{}}}],["export",{"_index":107,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["extend",{"_index":413,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["fals",{"_index":353,"title":{},"body":{"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["featur",{"_index":451,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["fg_links_per_pag",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["file",{"_index":70,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["find",{"_index":198,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["first",{"_index":325,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["fix",{"_index":197,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["flag",{"_index":84,"title":{},"body":{"index.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["footer",{"_index":340,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["footer.component.css",{"_index":341,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":342,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":122,"title":{"components/FooterComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["formsmodul",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":407,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["framework",{"_index":428,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["full",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":547,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"coverage.html":{}}}],["further",{"_index":94,"title":{},"body":{"index.html":{}}}],["gc_auth_token",{"_index":211,"title":{},"body":{"modules/GraphQLModule.html":{},"coverage.html":{}}}],["gc_user_id",{"_index":303,"title":{},"body":{"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["gener",{"_index":53,"title":{},"body":{"index.html":{}}}],["get",{"_index":49,"title":{"index.html":{}},"body":{}}],["getoperationast",{"_index":210,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["getoperationast(operation.queri",{"_index":235,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["go",{"_index":97,"title":{},"body":{"index.html":{}}}],["gql",{"_index":486,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["graph",{"_index":141,"title":{},"body":{"modules.html":{}}}],["graph.cool",{"_index":426,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["graphcool",{"_index":435,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["graphql",{"_index":34,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{},"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["graphqlmodul",{"_index":125,"title":{"modules/GraphQLModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/GraphQLModule.html":{}}}],["hacker",{"_index":365,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header",{"_index":222,"title":{},"body":{"modules/GraphQLModule.html":{},"components/HeaderComponent.html":{}}}],["header'},{'nam",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["header.component.css",{"_index":346,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":347,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":118,"title":{"components/HeaderComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["headers.append('author",{"_index":223,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["headlin",{"_index":438,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["help",{"_index":95,"title":{},"body":{"index.html":{}}}],["here",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hn",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["hold",{"_index":409,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["html",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["http",{"_index":20,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{}}}],["http://localhost:4200",{"_index":64,"title":{},"body":{"index.html":{}}}],["httpclientmodul",{"_index":185,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httpheader",{"_index":186,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink",{"_index":189,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplink.creat",{"_index":224,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["httplinkmodul",{"_index":190,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://api.graph.cool/simple/v1/cjd7lhvu528sq0139ryabkjbk",{"_index":216,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["https://github.com/apollographql/graphql",{"_index":201,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["humanized",{"_index":371,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["humanizedate(d",{"_index":383,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["humanizedate(link.createdat",{"_index":401,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["id",{"_index":420,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["identifi",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["import",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{}}}],["index+1",{"_index":393,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["indic",{"_index":458,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["info",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["inject",{"_index":132,"title":{},"body":{"overview.html":{},"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["inmemori",{"_index":24,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{}}}],["inmemorycach",{"_index":209,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["input",{"_index":372,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["instal",{"_index":196,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["instanc",{"_index":433,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["int",{"_index":488,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["interfac",{"_index":136,"title":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}},"body":{"overview.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["isauthent",{"_index":363,"title":{},"body":{"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["item",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["item'},{'nam",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["item.compon",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.css",{"_index":368,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["item.component.html",{"_index":369,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["item.component.t",{"_index":367,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["item.component.ts:14",{"_index":379,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:17",{"_index":377,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:20",{"_index":378,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:23",{"_index":375,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:27",{"_index":384,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:31",{"_index":382,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["item.component.ts:36",{"_index":471,"title":{},"body":{"classes/LinkUpvoteEvent.html":{}}}],["item/link",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["js",{"_index":32,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":90,"title":{},"body":{"index.html":{}}}],["last",{"_index":360,"title":{},"body":{"components/HeaderComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["legend",{"_index":102,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["lib",{"_index":204,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["like",{"_index":405,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["link",{"_index":19,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["link'},{'nam",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["link(filt",{"_index":517,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["link.compon",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["link.component.css",{"_index":288,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.html",{"_index":289,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.t",{"_index":287,"title":{},"body":{"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["link.component.ts:15",{"_index":298,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.ts:16",{"_index":299,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.ts:17",{"_index":297,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.ts:18",{"_index":294,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.ts:25",{"_index":296,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.component.ts:27",{"_index":295,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["link.descript",{"_index":394,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["link.postedbi",{"_index":398,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["link.postedby.nam",{"_index":399,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["link.url",{"_index":395,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["link.votes.length",{"_index":396,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["link/creat",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["linkid",{"_index":504,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["linkitemcompon",{"_index":116,"title":{"components/LinkItemComponent.html":{}},"body":{"overview.html":{},"modules/AppModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["linkitemlistcompon",{"_index":117,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["linkorderbi",{"_index":489,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["linkupvoteev",{"_index":374,"title":{"classes/LinkUpvoteEvent.html":{}},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["linkupvoteevent(this.link",{"_index":392,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["list'},{'nam",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["list.compon",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["list.component.t",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["list/link",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["liter",{"_index":482,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["load",{"_index":481,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["localstorage.getitem(gc_auth_token",{"_index":218,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["localstorage.getitem(gc_user_id",{"_index":307,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["lodash",{"_index":38,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":310,"title":{},"body":{"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{}}}],["login",{"_index":181,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["login'},{'nam",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["logincompon",{"_index":119,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["logout",{"_index":348,"title":{},"body":{"components/HeaderComponent.html":{}}}],["main",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["main'},{'nam",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["maincompon",{"_index":121,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["manag",{"_index":425,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["managedbygraphcool",{"_index":414,"title":{"classes/ManagedByGraphCool.html":{}},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["match",{"_index":48,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"routes.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["messag",{"_index":461,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["metadata",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["method",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["miscellan",{"_index":546,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["modul",{"_index":104,"title":{"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{}},"body":{"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{}}}],["more",{"_index":96,"title":{},"body":{"index.html":{}}}],["mutat",{"_index":316,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["mutation_in",{"_index":518,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["name",{"_index":74,"title":{},"body":{"index.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{}}}],["navig",{"_index":63,"title":{},"body":{"index.html":{}}}],["need",{"_index":195,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["nest",{"_index":465,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["new",{"_index":75,"title":{},"body":{"index.html":{},"modules/GraphQLModule.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["new/1",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["new/:pag",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["new_links_subscript",{"_index":516,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["new_votes_subscript",{"_index":521,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["newdescript",{"_index":311,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["newlinksubcriptionrespons",{"_index":520,"title":{"interfaces/NewLinkSubcriptionResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["newurl",{"_index":313,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["newvotesubcriptionrespons",{"_index":523,"title":{"interfaces/NewVoteSubcriptionResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["ng",{"_index":60,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{}}}],["ngoninit",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["nicknam",{"_index":453,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["node",{"_index":519,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["npm",{"_index":194,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["null",{"_index":221,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["number",{"_index":376,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":432,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["oninit",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["oper",{"_index":233,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operation.operationnam",{"_index":236,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationast",{"_index":234,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["operationast.oper",{"_index":238,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["option",{"_index":226,"title":{},"body":{"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":444,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["orderbi",{"_index":328,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["out",{"_index":99,"title":{},"body":{"index.html":{},"overview.html":{},"modules/AppModule.html":{}}}],["output",{"_index":373,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["overview",{"_index":101,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":0,"title":{"dependencies.html":{}},"body":{"modules/GraphQLModule.html":{}}}],["paramet",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":468,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["particul",{"_index":436,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["password",{"_index":493,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["path",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["post",{"_index":460,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["postedbi",{"_index":441,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["postedbyid",{"_index":306,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["previou",{"_index":551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prod",{"_index":83,"title":{},"body":{"index.html":{}}}],["product",{"_index":85,"title":{},"body":{"index.html":{}}}],["project",{"_index":52,"title":{},"body":{"index.html":{}}}],["properti",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["protractor",{"_index":93,"title":{},"body":{"index.html":{}}}],["provid",{"_index":106,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["queri",{"_index":324,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["readm",{"_index":100,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":447,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["reconnect",{"_index":227,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["redirectto",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":416,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["reload",{"_index":67,"title":{},"body":{"index.html":{}}}],["repli",{"_index":462,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["repres",{"_index":404,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["reset",{"_index":128,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}],["respons",{"_index":334,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["result",{"_index":47,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"modules.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"routes.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["return",{"_index":237,"title":{},"body":{"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["root",{"_index":248,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'nam",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["rout",{"_index":137,"title":{"routes.html":{}},"body":{"overview.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["router",{"_index":291,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["routermodul",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":59,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":40,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/distinctuntilchang",{"_index":354,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rxjs/subscript",{"_index":389,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["scaffold",{"_index":72,"title":{},"body":{"index.html":{}}}],["schema",{"_index":410,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["search",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["search'},{'nam",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["searchcompon",{"_index":120,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["searchtext",{"_index":513,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["section",{"_index":205,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["selector",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["serv",{"_index":61,"title":{},"body":{"index.html":{}}}],["server",{"_index":58,"title":{},"body":{"index.html":{}}}],["servic",{"_index":335,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["setup",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["sever",{"_index":445,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["short",{"_index":437,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["side",{"_index":446,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["signal",{"_index":463,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["signin_user_mut",{"_index":499,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["signinus",{"_index":498,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["signinusermutation($email",{"_index":500,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["signinusermutationrespons",{"_index":501,"title":{"interfaces/SigninUserMutationResponse.html":{}},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["signupus",{"_index":494,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["singl",{"_index":542,"title":{},"body":{"interfaces/UniqueId.html":{}}}],["skip",{"_index":327,"title":{},"body":{"components/CreateLinkComponent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["sourc",{"_index":69,"title":{},"body":{"index.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GraphQLModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["src/app/apollo.config.t",{"_index":184,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["src/app/app.component.t",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":263,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.t",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.utils.t",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{},"coverage.html":{}}}],["src/app/auth.service.t",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["src/app/component/cr",{"_index":286,"title":{},"body":{"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["src/app/component/footer/footer.component.t",{"_index":339,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/component/footer/footer.component.ts:12",{"_index":344,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/footer/footer.component.ts:8",{"_index":343,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/component/header/header.component.t",{"_index":345,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/component/header/header.component.ts:11",{"_index":349,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/component/header/header.component.ts:16",{"_index":351,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/component/header/header.component.ts:25",{"_index":350,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/component/link",{"_index":366,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"coverage.html":{}}}],["src/app/component/login/login.component.t",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["src/app/component/main/main.component.t",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["src/app/component/search/search.component.t",{"_index":569,"title":{},"body":{"coverage.html":{}}}],["src/app/component/top/top.component.t",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["src/app/constants.t",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["src/app/graphql.t",{"_index":478,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"coverage.html":{}}}],["src/app/graphql.ts:108",{"_index":531,"title":{},"body":{"interfaces/CreateUserMutationResponse.html":{}}}],["src/app/graphql.ts:109",{"_index":530,"title":{},"body":{"interfaces/CreateUserMutationResponse.html":{}}}],["src/app/graphql.ts:110",{"_index":532,"title":{},"body":{"interfaces/CreateUserMutationResponse.html":{}}}],["src/app/graphql.ts:130",{"_index":538,"title":{},"body":{"interfaces/SigninUserMutationResponse.html":{}}}],["src/app/graphql.ts:131",{"_index":539,"title":{},"body":{"interfaces/SigninUserMutationResponse.html":{}}}],["src/app/graphql.ts:157",{"_index":534,"title":{},"body":{"interfaces/CreateVoteMutationResponse.html":{}}}],["src/app/graphql.ts:158",{"_index":533,"title":{},"body":{"interfaces/CreateVoteMutationResponse.html":{}}}],["src/app/graphql.ts:193",{"_index":526,"title":{},"body":{"interfaces/AllLinksSearchQueryResponse.html":{}}}],["src/app/graphql.ts:194",{"_index":525,"title":{},"body":{"interfaces/AllLinksSearchQueryResponse.html":{}}}],["src/app/graphql.ts:195",{"_index":524,"title":{},"body":{"interfaces/AllLinksSearchQueryResponse.html":{}}}],["src/app/graphql.ts:227",{"_index":536,"title":{},"body":{"interfaces/NewLinkSubcriptionResponse.html":{}}}],["src/app/graphql.ts:262",{"_index":537,"title":{},"body":{"interfaces/NewVoteSubcriptionResponse.html":{}}}],["src/app/graphql.ts:44",{"_index":484,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{}}}],["src/app/graphql.ts:45",{"_index":485,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{}}}],["src/app/graphql.ts:46",{"_index":483,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{}}}],["src/app/graphql.ts:80",{"_index":527,"title":{},"body":{"interfaces/CreateLinkMutationResponse.html":{}}}],["src/app/graphql.ts:81",{"_index":528,"title":{},"body":{"interfaces/CreateLinkMutationResponse.html":{}}}],["src/app/graphql.ts:82",{"_index":529,"title":{},"body":{"interfaces/CreateLinkMutationResponse.html":{}}}],["src/app/types.t",{"_index":403,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["src/app/types.ts:12",{"_index":544,"title":{},"body":{"interfaces/UniqueId.html":{}}}],["src/app/types.ts:150",{"_index":476,"title":{},"body":{"classes/Vote.html":{}}}],["src/app/types.ts:154",{"_index":475,"title":{},"body":{"classes/Vote.html":{}}}],["src/app/types.ts:20",{"_index":535,"title":{},"body":{"interfaces/CreatedAt.html":{}}}],["src/app/types.ts:210",{"_index":418,"title":{},"body":{"classes/CommentVote.html":{}}}],["src/app/types.ts:214",{"_index":415,"title":{},"body":{"classes/CommentVote.html":{}}}],["src/app/types.ts:28",{"_index":545,"title":{},"body":{"interfaces/UpdatedAt.html":{}}}],["src/app/types.ts:48",{"_index":473,"title":{},"body":{"classes/ManagedByGraphCool.html":{}}}],["src/app/types.ts:54",{"_index":472,"title":{},"body":{"classes/ManagedByGraphCool.html":{}}}],["src/app/types.ts:60",{"_index":474,"title":{},"body":{"classes/ManagedByGraphCool.html":{}}}],["src/environments/environment.prod.t",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["src/environments/environment.t",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["start",{"_index":50,"title":{"index.html":{}},"body":{}}],["statement",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":80,"title":{},"body":{"index.html":{},"components/CreateLinkComponent.html":{}}}],["store.readqueri",{"_index":323,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["store.writequeri",{"_index":331,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["string",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{}}}],["structur",{"_index":466,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["styleurl",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["submit",{"_index":338,"title":{},"body":{"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["subscribe((respons",{"_index":332,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["subscribe(isauthent",{"_index":361,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscript",{"_index":42,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["subscriptions/issues/83",{"_index":202,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["support",{"_index":138,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":139,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":543,"title":{},"body":{"interfaces/UniqueId.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":36,"title":{},"body":{"dependencies.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["templat",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["templateurl",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["test",{"_index":87,"title":{},"body":{"index.html":{}}}],["this.apollo",{"_index":304,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["this.apollo.mut",{"_index":315,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["this.authservice.autologin",{"_index":269,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.isauthent",{"_index":355,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.logout",{"_index":364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.descript",{"_index":312,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["this.linkupvoteevent.emit(new",{"_index":391,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{}}}],["this.log",{"_index":362,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.rout",{"_index":305,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["this.router.navig",{"_index":336,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["this.url",{"_index":314,"title":{},"body":{"components/CreateLinkComponent.html":{}}}],["timediffer",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{},"coverage.html":{}}}],["timedifference(curr",{"_index":550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["timedifferenceford",{"_index":386,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["timedifferencefordate(d",{"_index":390,"title":{},"body":{"components/LinkItemComponent.html":{},"classes/LinkUpvoteEvent.html":{},"miscellaneous/functions.html":{}}}],["titl",{"_index":254,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":217,"title":{},"body":{"modules/GraphQLModule.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["top",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{}}}],["topcompon",{"_index":123,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"coverage.html":{}}}],["transport",{"_index":43,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{}}}],["tree",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["true",{"_index":228,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["tsconfig.json",{"_index":206,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["type",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/LinkUpvoteEvent.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"miscellaneous/functions.html":{},"coverage.html":{}}}],["types/lodash",{"_index":14,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":431,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["uniqu",{"_index":434,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["uniqueid",{"_index":419,"title":{"interfaces/UniqueId.html":{}},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["unit",{"_index":86,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":400,"title":{},"body":{"components/LinkItemComponent.html":{}}}],["updat",{"_index":321,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["updatedat",{"_index":424,"title":{"interfaces/UpdatedAt.html":{}},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["upvot",{"_index":442,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["uri",{"_index":215,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["url",{"_index":292,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["url_contain",{"_index":512,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["us",{"_index":76,"title":{},"body":{"index.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["user",{"_index":309,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["userid",{"_index":506,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["valu",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["var",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["variabl",{"_index":317,"title":{},"body":{"components/CreateLinkComponent.html":{},"coverage.html":{}}}],["verifi",{"_index":456,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["version",{"_index":55,"title":{},"body":{"index.html":{}}}],["via",{"_index":89,"title":{},"body":{"index.html":{}}}],["visitor",{"_index":449,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["void",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CreateLinkComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LinkItemComponent.html":{}}}],["vote",{"_index":397,"title":{"classes/Vote.html":{}},"body":{"components/LinkItemComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{},"coverage.html":{}}}],["vote(filt",{"_index":522,"title":{},"body":{"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{}}}],["votecount",{"_index":318,"title":{},"body":{"components/CreateLinkComponent.html":{},"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/AllLinkQueryResponse.html":{},"interfaces/AllLinksSearchQueryResponse.html":{},"interfaces/CreateLinkMutationResponse.html":{},"interfaces/CreateUserMutationResponse.html":{},"interfaces/CreateVoteMutationResponse.html":{},"interfaces/CreatedAt.html":{},"interfaces/NewLinkSubcriptionResponse.html":{},"interfaces/NewVoteSubcriptionResponse.html":{},"interfaces/SigninUserMutationResponse.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["websocketlink",{"_index":207,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["whitin",{"_index":452,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["wide",{"_index":540,"title":{},"body":{"interfaces/UniqueId.html":{}}}],["within",{"_index":411,"title":{},"body":{"classes/CommentVote.html":{},"classes/ManagedByGraphCool.html":{},"classes/Vote.html":{},"interfaces/CreatedAt.html":{},"interfaces/UniqueId.html":{},"interfaces/UpdatedAt.html":{}}}],["ws",{"_index":29,"title":{},"body":{"dependencies.html":{},"modules/GraphQLModule.html":{}}}],["wss://subscriptions.graph.cool/v1/cjd7lhvu528sq0139ryabkjbk",{"_index":225,"title":{},"body":{"modules/GraphQLModule.html":{}}}],["zone.j",{"_index":45,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":127,"title":{},"body":{"overview.html":{},"modules/AppModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Dependencies\n\n\n        @angular/animations : ^5.2.0\n        @angular/common : ^5.2.0\n        @angular/compiler : ^5.2.0\n        @angular/core : ^5.2.0\n        @angular/forms : ^5.2.0\n        @angular/http : ^5.2.0\n        @angular/platform-browser : ^5.2.0\n        @angular/platform-browser-dynamic : ^5.2.0\n        @angular/router : ^5.2.0\n        @types/lodash : ^4.14.104\n        apollo-angular : ^1.0.1\n        apollo-angular-link-http : ^1.0.2-beta.0\n        apollo-cache-inmemory : ^1.1.7\n        apollo-client : ^2.2.2\n        apollo-link : ^1.1.0\n        apollo-link-ws : ^1.0.5\n        core-js : ^2.4.1\n        graphql : ^0.12.3\n        graphql-tag : ^2.6.1\n        lodash : ^4.17.5\n        rxjs : ^5.5.6\n        subscriptions-transport-ws : ^0.9.5\n        zone.js : ^0.8.19\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nClient\nThis project was generated with Angular CLI version 1.6.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateLinkComponent\n\nCreateLinkComponent\n\nAppModule -->\n\nCreateLinkComponent->AppModule\n\n\n\n\n\nLinkItemComponent\n\nLinkItemComponent\n\nAppModule -->\n\nLinkItemComponent->AppModule\n\n\n\n\n\nLinkItemListComponent\n\nLinkItemListComponent\n\nAppModule -->\n\nLinkItemListComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nTopComponent\n\nTopComponent\n\nAppModule -->\n\nTopComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            3 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        10 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        11 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            7 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GraphQLModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateLinkComponent\n\nCreateLinkComponent\n\nAppModule -->\n\nCreateLinkComponent->AppModule\n\n\n\n\n\nLinkItemComponent\n\nLinkItemComponent\n\nAppModule -->\n\nLinkItemComponent->AppModule\n\n\n\n\n\nLinkItemListComponent\n\nLinkItemListComponent\n\nAppModule -->\n\nLinkItemListComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nAppModule -->\n\nSearchComponent->AppModule\n\n\n\n\n\nMainComponent\n\nMainComponent\n\nAppModule -->\n\nMainComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nTopComponent\n\nTopComponent\n\nAppModule -->\n\nTopComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nGraphQLModule\n\nGraphQLModule\n\nAppModule -->\n\nGraphQLModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                CreateLinkComponent\n                            \n                            \n                                LinkItemComponent\n                            \n                            \n                                LinkItemListComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                SearchComponent\n                            \n                            \n                                MainComponent\n                            \n                            \n                                FooterComponent\n                            \n                            \n                                TopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                            \n                                    GraphQLModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { GraphQLModule } from './apollo.config';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app.routing';\nimport { CreateLinkComponent } from './component/create-link/create-link.component';\nimport { LinkItemComponent } from './component/link-item/link-item.component';\nimport { LinkItemListComponent } from './component/link-item-list/link-item-list.component';\nimport { HeaderComponent } from './component/header/header.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { AuthService } from './auth.service';\nimport { SearchComponent } from './component/search/search.component';\nimport { MainComponent } from './component/main/main.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { TopComponent } from './component/top/top.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateLinkComponent,\n    LinkItemComponent,\n    LinkItemListComponent,\n    HeaderComponent,\n    LoginComponent,\n    SearchComponent,\n    MainComponent,\n    FooterComponent,\n    TopComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    GraphQLModule\n  ],\n  providers: [\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// 1\nimport { LinkItemListComponent } from './component/link-item-list/link-item-list.component';\nimport { CreateLinkComponent } from './component/create-link/create-link.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { SearchComponent } from './component/search/search.component';\nimport { MainComponent } from './component/main/main.component';\nimport { TopComponent } from './component/top/top.component';\n\n/**\n * Setup all routes here\n */\nconst routes: Routes = [\n    {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: '/new/1'\n    },\n    {\n        path: 'new/:page',\n        component: MainComponent,\n        pathMatch: 'full'\n    },\n    {\n        path: 'top',\n        component: TopComponent,\n        pathMatch: 'full'\n    },\n    {\n        path: 'create',\n        component: CreateLinkComponent,\n        pathMatch: 'full'\n    },\n    {\n        path: 'login',\n        component: LoginComponent,\n        pathMatch: 'full'\n    },\n    {\n        path: 'search',\n        component: SearchComponent,\n        pathMatch: 'full'\n    },\n    {\n        path: '**',\n        redirectTo: '',\n    }\n];\n\n@NgModule({\n    imports: [\n        // 3\n        RouterModule.forRoot(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GraphQLModule.html":{"url":"modules/GraphQLModule.html","title":"module - GraphQLModule","body":"\n                   \n\n\n\n\n  Modules\n  GraphQLModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/apollo.config.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    HttpClientModule,\n    HttpHeaders\n} from '@angular/common/http';\nimport {\n    Apollo,\n    ApolloModule\n} from 'apollo-angular';\nimport {\n    HttpLink,\n    HttpLinkModule\n} from 'apollo-angular-link-http';\n// CAUTION! After adding this package additional\n// npm package 'subscriptions-transport-ws' needed to\n// be installed, also to fix \" Cannot find name 'AsyncIterator'.\" Error\n// ( https://github.com/apollographql/graphql-subscriptions/issues/83 )\n// esnext had to be added to lib section of tsconfig.json\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { ApolloLink } from 'apollo-link';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { getOperationAST } from 'graphql';\nimport { GC_AUTH_TOKEN } from './constants';\n\n@NgModule({\n    exports: [\n        // 2\n        HttpClientModule,\n        ApolloModule,\n        HttpLinkModule,\n    ],\n})\nexport class GraphQLModule {\n\n    constructor(apollo: Apollo, httpLink: HttpLink) {\n        const uri = 'https://api.graph.cool/simple/v1/cjd7lhvu528sq0139ryabkjbk';\n        const token = localStorage.getItem(GC_AUTH_TOKEN);\n        const authorization = token ? `Bearer ${token}` : null;\n        const headers = new HttpHeaders();\n        headers.append('Authorization', authorization);\n\n        const http = httpLink.create({ uri, headers });\n\n        const ws = new WebSocketLink({\n            uri: `wss://subscriptions.graph.cool/v1/cjd7lhvu528sq0139ryabkjbk`,\n            options: {\n                reconnect: true,\n                connectionParams: {\n                    authToken: localStorage.getItem(GC_AUTH_TOKEN),\n                }\n            }\n        });\n\n        apollo.create({\n            // 2\n            link: ApolloLink.split(\n                // 3\n                operation => {\n                    const operationAST = getOperationAST(operation.query, operation.operationName);\n                    return !!operationAST && operationAST.operation === 'subscription';\n                },\n                ws,\n                http,\n            ),\n            cache: new InMemoryCache()\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hn-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(authService: AuthService)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/app.component.ts:10\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        authService\n                                                      \n                                                            \n                                                                        AuthService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/app.component.ts:14\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                title\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Type :     string\n    \n                            \n                        \n                        \n                            \n                                Default value : 'app'\n                            \n                        \n                            \n                                \n                                    Defined in src/app/app.component.ts:10\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'hn-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.authService.autoLogin();\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n    \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'hn-root'},{'name': 'CreateLinkComponent', 'selector': 'hn-create-link'},{'name': 'FooterComponent', 'selector': 'hn-footer'},{'name': 'HeaderComponent', 'selector': 'hn-header'},{'name': 'LinkItemComponent', 'selector': 'hn-link-item'},{'name': 'LinkItemListComponent', 'selector': 'hn-link-item-list'},{'name': 'LoginComponent', 'selector': 'hn-login'},{'name': 'MainComponent', 'selector': 'hn-main'},{'name': 'SearchComponent', 'selector': 'hn-search'},{'name': 'TopComponent', 'selector': 'hn-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateLinkComponent.html":{"url":"components/CreateLinkComponent.html","title":"component - CreateLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateLinkComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/component/create-link/create-link.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hn-create-link\n            \n\n            \n                styleUrls\n                create-link.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-link.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apollo\n                            \n                            \n                                description\n                            \n                            \n                                router\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createLink\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(apollo: Apollo, router: Router)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:18\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        apollo\n                                                      \n                                                            \n                                                                        Apollo\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                                    \n                                                        router\n                                                      \n                                                            \n                                                                        Router\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                createLink\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    createLink()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                apollo\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            apollo:     Apollo\n    \n                        \n                    \n                        \n                            \n                                Type :     Apollo\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:17\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                description\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            description:     String\n    \n                        \n                    \n                        \n                            \n                                Type :     String\n    \n                            \n                        \n                        \n                            \n                                Default value : ''\n                            \n                        \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:15\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                router\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            router:     Router\n    \n                        \n                    \n                        \n                            \n                                Type :     Router\n    \n                            \n                        \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:18\n                                \n                            \n    \n    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                url\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            url:     String\n    \n                        \n                    \n                        \n                            \n                                Type :     String\n    \n                            \n                        \n                        \n                            \n                                Default value : ''\n                            \n                        \n                            \n                                \n                                    Defined in src/app/component/create-link/create-link.component.ts:16\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { ALL_LINKS_QUERY, CREATE_LINK_MUTATION, CreateLinkMutationResponse } from '../../graphql';\nimport { ApolloLink } from 'apollo-link';\nimport { AppRoutingModule } from '../../app.routing';\nimport { Router } from '@angular/router';\nimport { GC_USER_ID } from './../../constants';\n\n@Component({\n  selector: 'hn-create-link',\n  templateUrl: './create-link.component.html',\n  styleUrls: ['./create-link.component.css'],\n})\nexport class CreateLinkComponent implements OnInit {\n  description: String = '';\n  url: String = '';\n  apollo: Apollo;\n  router: Router;\n\n  constructor( apollo: Apollo, router: Router ) {\n    this.apollo = apollo;\n    this.router = router;\n   }\n\n  ngOnInit() { }\n\n  createLink() {\n    const postedById = localStorage.getItem(GC_USER_ID);\n    if (!postedById) {\n      console.error('No user logged in');\n      return;\n    }\n\n    const newDescription = this.description;\n    const newUrl = this.url;\n    this.description = '';\n    this.url = '';\n\n    this.apollo.mutate({\n      mutation: CREATE_LINK_MUTATION,\n      variables: {\n        description: newDescription,\n        url: newUrl,\n        voteCount: 0,\n        commentCount: 0,\n        postedById: postedById\n      },\n      update: (store, { data: { createLink } }) => {\n        const data: any = store.readQuery({\n          query: ALL_LINKS_QUERY,\n          variables: {\n            first: 25,\n            skip: 0,\n            orderBy: 'createdAt_DESC'\n          }\n        });\n        data.allLinks.push(createLink);\n        store.writeQuery({ query: ALL_LINKS_QUERY, data });\n      },\n    }).subscribe((response) => {\n      console.log( 'CreateLink-Response:' );\n      console.log( response );\n      // We injected the Router service\n      this.router.navigate(['/']);\n    }, (error) => {\n      console.error(error);\n      this.description = newDescription;\n      this.url = newUrl;\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  Submit\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Submit'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'hn-root'},{'name': 'CreateLinkComponent', 'selector': 'hn-create-link'},{'name': 'FooterComponent', 'selector': 'hn-footer'},{'name': 'HeaderComponent', 'selector': 'hn-header'},{'name': 'LinkItemComponent', 'selector': 'hn-link-item'},{'name': 'LinkItemListComponent', 'selector': 'hn-link-item-list'},{'name': 'LoginComponent', 'selector': 'hn-login'},{'name': 'MainComponent', 'selector': 'hn-main'},{'name': 'SearchComponent', 'selector': 'hn-search'},{'name': 'TopComponent', 'selector': 'hn-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/component/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hn-footer\n            \n\n            \n                styleUrls\n                footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/footer/footer.component.ts:8\n                                \n                            \n    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/footer/footer.component.ts:12\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hn-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'hn-root'},{'name': 'CreateLinkComponent', 'selector': 'hn-create-link'},{'name': 'FooterComponent', 'selector': 'hn-footer'},{'name': 'HeaderComponent', 'selector': 'hn-header'},{'name': 'LinkItemComponent', 'selector': 'hn-link-item'},{'name': 'LinkItemListComponent', 'selector': 'hn-link-item-list'},{'name': 'LoginComponent', 'selector': 'hn-login'},{'name': 'MainComponent', 'selector': 'hn-main'},{'name': 'SearchComponent', 'selector': 'hn-search'},{'name': 'TopComponent', 'selector': 'hn-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/component/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hn-header\n            \n\n            \n                styleUrls\n                header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logged\n                            \n                        \n                    \n                \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor(authService: AuthService)\n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/header/header.component.ts:11\n                                \n                            \n    \n                    \n                        \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        authService\n                                                      \n                                                            \n                                                                        AuthService\n                                                            \n                                                      \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                logout\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    logout()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/header/header.component.ts:25\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                ngOnInit\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    ngOnInit()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/header/header.component.ts:16\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        \n            \n                Properties\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                logged\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n                            logged:     boolean\n    \n                        \n                    \n                        \n                            \n                                Type :     boolean\n    \n                            \n                        \n                        \n                            \n                                Default value : false\n                            \n                        \n                            \n                                \n                                    Defined in src/app/component/header/header.component.ts:11\n                                \n                            \n    \n    \n                \n            \n    \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../auth.service';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\n@Component({\n  selector: 'hn-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  logged: boolean = false;\n\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit() {\n    this.authService.isAuthenticated\n      .distinctUntilChanged() // Only emit when the current value is different than the last\n      .subscribe(isAuthenticated => {\n        this.logged = isAuthenticated;\n      });\n\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n\n    \n\n    \n        \n  \n    Hacker News\n    new\n    |\n    top\n    |\n    search\n    \n      |\n      submit\n    \n  \n  \n    logout\n    login\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Hacker News    new    |    top    |    search          |      submit            logout    login  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'hn-root'},{'name': 'CreateLinkComponent', 'selector': 'hn-create-link'},{'name': 'FooterComponent', 'selector': 'hn-footer'},{'name': 'HeaderComponent', 'selector': 'hn-header'},{'name': 'LinkItemComponent', 'selector': 'hn-link-item'},{'name': 'LinkItemListComponent', 'selector': 'hn-link-item-list'},{'name': 'LoginComponent', 'selector': 'hn-login'},{'name': 'MainComponent', 'selector': 'hn-main'},{'name': 'SearchComponent', 'selector': 'hn-search'},{'name': 'TopComponent', 'selector': 'hn-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkItemComponent.html":{"url":"components/LinkItemComponent.html","title":"component - LinkItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LinkItemComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/component/link-item/link-item.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hn-link-item\n            \n\n            \n                styleUrls\n                link-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./link-item.component.html\n            \n\n\n        \n    \n\n\n    \n        Index\n        \n            \n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dispatchUpvoteEvent\n                            \n                            \n                                humanizeDate\n                            \n                        \n                    \n                \n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                link\n                            \n                        \n                    \n                \n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                linkUpvoteEvent\n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n    constructor()\n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:23\n                                \n                            \n    \n                \n            \n    \n\n    \n        Inputs\n            \n                \n                    \n                        \n                            \n                            index\n                        \n                        \n                              \n                                Type:    number\n\n                              \n                            \n                              Default value: 0\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:17\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            isAuthenticated\n                        \n                        \n                              \n                                Type:    boolean\n\n                              \n                            \n                              Default value: false\n                            \n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:20\n                                \n                            \n                \n            \n            \n                \n                    \n                        \n                            \n                            link\n                        \n                        \n                              \n                                Type:    Link\n\n                              \n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:14\n                                \n                            \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            \n                            linkUpvoteEvent\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:23\n                                \n                            \n                \n            \n    \n\n\n\n    \n        \n            \n                Methods\n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                dispatchUpvoteEvent\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    dispatchUpvoteEvent()\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:31\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                    Returns :     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                humanizeDate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    humanizeDate(date: string)\n                        \n                    \n    \n    \n                            \n                                \n                                    Defined in src/app/component/link-item/link-item.component.ts:27\n                                \n                            \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        date\n                                                        \n                                                            \n                                                                        string\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n\n\n\n\n    \n        import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { Link } from '../../types';\nimport { timeDifferenceForDate } from './../../app.utils';\nimport { DataProxy } from 'apollo-cache';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'hn-link-item',\n  templateUrl: './link-item.component.html',\n  styleUrls: ['./link-item.component.css']\n})\nexport class LinkItemComponent {\n  @Input()\n  link: Link;\n\n  @Input()\n  index: number = 0;\n\n  @Input()\n  isAuthenticated: boolean = false;\n\n  @Output()\n  linkUpvoteEvent: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  humanizeDate(date: string) {\n    return timeDifferenceForDate(date);\n  }\n\n  dispatchUpvoteEvent() {\n    this.linkUpvoteEvent.emit(new LinkUpvoteEvent(this.link));\n  }\n}\n\nexport class LinkUpvoteEvent {\n  constructor(private link: Link) {}\n}\n\n    \n\n    \n        \n  \n    {{index+1}}.\n    ▲\n  \n  \n    {{link.description}} ({{link.url}})\n    \n      {{link.votes.length}} votes | by {{link.postedBy ? link.postedBy.name : 'Unknown'}} {{humanizeDate(link.createdAt)}}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{index+1}}.    ▲        {{link.description}} ({{link.url}})          {{link.votes.length}} votes | by {{link.postedBy ? link.postedBy.name : \\'Unknown\\'}} {{humanizeDate(link.createdAt)}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'hn-root'},{'name': 'CreateLinkComponent', 'selector': 'hn-create-link'},{'name': 'FooterComponent', 'selector': 'hn-footer'},{'name': 'HeaderComponent', 'selector': 'hn-header'},{'name': 'LinkItemComponent', 'selector': 'hn-link-item'},{'name': 'LinkItemListComponent', 'selector': 'hn-link-item-list'},{'name': 'LoginComponent', 'selector': 'hn-login'},{'name': 'MainComponent', 'selector': 'hn-main'},{'name': 'SearchComponent', 'selector': 'hn-search'},{'name': 'TopComponent', 'selector': 'hn-main'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinkItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommentVote.html":{"url":"classes/CommentVote.html","title":"class - CommentVote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommentVote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                CommentVote - A CommentVote represents that a user liked and/or\nfound the response to link or comment useful.\nClass to hold data available at graphql schema-type\nComment, representing this schema-type within this application\n\n            \n\n            \n                Extends\n            \n            \n                    ManagedByGraphCool\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        comment\n                                    \n                                    \n                                        user\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        comment\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    comment:     Comment\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Comment\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:214\n                                        \n                                    \n            \n                            \n                                \n                                    Reference to the comment a user casted the vote on\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        user\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    user:     User\n            \n                                \n                            \n                                \n                                    \n                                        Type :     User\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:210\n                                        \n                                    \n            \n                            \n                                \n                                    Reference to the user casting the vote on a comment\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkUpvoteEvent.html":{"url":"classes/LinkUpvoteEvent.html","title":"class - LinkUpvoteEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkUpvoteEvent\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/component/link-item/link-item.component.ts\n        \n\n\n\n\n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n            constructor(link: Link)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/app/component/link-item/link-item.component.ts:36\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                                Type\n                                                            Optional\n                                                        \n                                                    \n                                                    \n                                                            \n                                                                link\n                                                              \n                                                                    \n                                                                                Link\n                                                                    \n                                                              \n                                                                \n                                                                        no\n                                                                \n                                                                \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n\n\n    \n\n\n    \n        import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { Link } from '../../types';\nimport { timeDifferenceForDate } from './../../app.utils';\nimport { DataProxy } from 'apollo-cache';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'hn-link-item',\n  templateUrl: './link-item.component.html',\n  styleUrls: ['./link-item.component.css']\n})\nexport class LinkItemComponent {\n  @Input()\n  link: Link;\n\n  @Input()\n  index: number = 0;\n\n  @Input()\n  isAuthenticated: boolean = false;\n\n  @Output()\n  linkUpvoteEvent: EventEmitter = new EventEmitter();\n\n  constructor() {}\n\n  humanizeDate(date: string) {\n    return timeDifferenceForDate(date);\n  }\n\n  dispatchUpvoteEvent() {\n    this.linkUpvoteEvent.emit(new LinkUpvoteEvent(this.link));\n  }\n}\n\nexport class LinkUpvoteEvent {\n  constructor(private link: Link) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ManagedByGraphCool.html":{"url":"classes/ManagedByGraphCool.html","title":"class - ManagedByGraphCool","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ManagedByGraphCool\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                ManagedByGraphCool - This class should be used\nto be extended by all classes representing graphql\nschema-types managed by the graph.cool\nbackend-framework\nClass defines the common properties\nid, createdAt and updated at that should\nby available on every graphql schema-type\ndefined for this application and should be\nextended by every according typescript 'graphql-type'\nobject-instance.\n\n            \n\n\n            \n                Implements\n            \n            \n                        UniqueId\n                        CreatedAt\n                        UpdatedAt\n            \n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        createdAt\n                                    \n                                    \n                                        id\n                                    \n                                    \n                                        updatedAt\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        createdAt\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    createdAt:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:54\n                                        \n                                    \n            \n                            \n                                \n                                    The datetime the particuler\n            graphql schema-type instance was created.\n            Managed by the graphcool-framework\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        id\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    id:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:48\n                                        \n                                    \n            \n                            \n                                \n                                    Unique instance id managed by the graphcool-framework\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        updatedAt\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    updatedAt:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:60\n                                        \n                                    \n            \n                            \n                                \n                                    The datetime the particuler\n            graphql schema-type instance was updated.\n            Managed by the graphcool-framework\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Vote.html":{"url":"classes/Vote.html","title":"class - Vote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Vote\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                Vote - A Vote is a flag indicating that a user liked\nand/or found the contents of a submitted link useful\nClass to hold data available at graphql schema-type\nVote, representing this schema-type within this application\n\n            \n\n            \n                Extends\n            \n            \n                    ManagedByGraphCool\n            \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        link\n                                    \n                                    \n                                        user\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n\n\n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        link\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    link:     Link\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Link\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:154\n                                        \n                                    \n            \n                            \n                                \n                                    Reference to the link the vote was casted on\n            \n                                \n                            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    \n                                        \n                                        user\n                                        \n                                        \n                                    \n                                \n                            \n                            \n                                \n                                    user:     User\n            \n                                \n                            \n                                \n                                    \n                                        Type :     User\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/app/types.ts:150\n                                        \n                                    \n            \n                            \n                                \n                                    Reference to the user that casted that vote\n            \n                                \n                            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllLinkQueryResponse.html":{"url":"interfaces/AllLinkQueryResponse.html","title":"interface - AllLinkQueryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AllLinkQueryResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _allLinksMeta\n                                \n                                \n                                        allLinks\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _allLinksMeta\n                                    \n                                \n                                \n                                    \n                                        _allLinksMeta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:46\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allLinks\n                                    \n                                \n                                \n                                    \n                                        allLinks:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:44\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:45\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AllLinksSearchQueryResponse.html":{"url":"interfaces/AllLinksSearchQueryResponse.html","title":"interface - AllLinksSearchQueryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AllLinksSearchQueryResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _allLinksMeta\n                                \n                                \n                                        allLinks\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _allLinksMeta\n                                    \n                                \n                                \n                                    \n                                        _allLinksMeta:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:195\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allLinks\n                                    \n                                \n                                \n                                    \n                                        allLinks:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:194\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:193\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateLinkMutationResponse.html":{"url":"interfaces/CreateLinkMutationResponse.html","title":"interface - CreateLinkMutationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateLinkMutationResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createLink\n                                \n                                \n                                        loading\n                                \n                                \n                                        postedBy\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createLink\n                                    \n                                \n                                \n                                    \n                                        createLink:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:80\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:81\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postedBy\n                                    \n                                \n                                \n                                    \n                                        postedBy:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:82\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateUserMutationResponse.html":{"url":"interfaces/CreateUserMutationResponse.html","title":"interface - CreateUserMutationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateUserMutationResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createUser\n                                \n                                \n                                        loading\n                                \n                                \n                                        signinUser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createUser\n                                    \n                                \n                                \n                                    \n                                        createUser:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:109\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:108\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signinUser\n                                    \n                                \n                                \n                                    \n                                        signinUser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:110\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateVoteMutationResponse.html":{"url":"interfaces/CreateVoteMutationResponse.html","title":"interface - CreateVoteMutationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreateVoteMutationResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createVote\n                                \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createVote\n                                    \n                                \n                                \n                                    \n                                        createVote:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:158\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:157\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatedAt.html":{"url":"interfaces/CreatedAt.html","title":"interface - CreatedAt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreatedAt\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that hold the datetime-value\nof their creation\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/types.ts:20\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewLinkSubcriptionResponse.html":{"url":"interfaces/NewLinkSubcriptionResponse.html","title":"interface - NewLinkSubcriptionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewLinkSubcriptionResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:227\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewVoteSubcriptionResponse.html":{"url":"interfaces/NewVoteSubcriptionResponse.html","title":"interface - NewVoteSubcriptionResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewVoteSubcriptionResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        node\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                    \n                                \n                                \n                                    \n                                        node:     Vote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vote\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:262\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SigninUserMutationResponse.html":{"url":"interfaces/SigninUserMutationResponse.html","title":"interface - SigninUserMutationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SigninUserMutationResponse\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                                \n                                        signinUser\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:130\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signinUser\n                                    \n                                \n                                \n                                    \n                                        signinUser:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/graphql.ts:131\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Link,\n  User,\n  Vote,\n  Comment,\n  CommentVote\n} from './types';\nimport gql from 'graphql-tag';\n\nexport const ALL_LINKS_QUERY = gql`\n  query AllLinksQuery (\n    $first: Int = 25,\n    $skip: Int = 0,\n    $orderBy: LinkOrderBy = createdAt_DESC\n  ) {\n    allLinks(\n      first: $first,\n      skip: $skip,\n      orderBy: $orderBy\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n    _allLinksMeta {\n      count\n    }\n  }\n`;\n\nexport interface AllLinkQueryResponse {\n  allLinks: Link[];\n  loading: boolean;\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const CREATE_LINK_MUTATION = gql`\n  mutation CreateLinkMutation (\n    $description: String!,\n    $url: String!,\n    $postedById: ID!,\n    $voteCount: Int!\n    $commentCount: Int!\n  ) {\n    createLink (\n      description: $description\n      url: $url\n      postedById: $postedById\n      voteCount: $voteCount\n      commentCount: $commentCount\n    ) {\n      id\n      createdAt\n      url\n      description\n      voteCount\n      postedBy {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport interface CreateLinkMutationResponse {\n  createLink: Link;\n  loading: boolean;\n  postedBy: {\n    id\n    name\n  };\n}\n\nexport const CREATE_USER_MUTATION = gql`\n  mutation CreateUserMutation($name: String!, $email: String!, $password: String!){\n    signupUser(\n      name: $name\n      email: $email\n      password: $password\n    ){\n      id\n    }\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ){\n      id\n      token\n    }\n  }\n`;\n\nexport interface CreateUserMutationResponse {\n  loading: boolean;\n  createUser: User;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const SIGNIN_USER_MUTATION = gql`\n  mutation SigninUserMutation($email: String!, $password: String!) {\n    authenticateUser(\n      email: $email,\n      password: $password,\n    ) {\n      id\n      token\n      name\n    }\n  }\n`;\n\nexport interface SigninUserMutationResponse {\n  loading: boolean;\n  signinUser: {\n    token: string,\n    user?: User\n  };\n}\n\nexport const CREATE_VOTE_MUTATION = gql`\n  mutation CreateVoteMutation($userId: ID!, $linkId: ID!) {\n    createVote(userId: $userId, linkId: $linkId) {\n      id\n      link {\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`;\n\nexport interface CreateVoteMutationResponse {\n  loading: boolean;\n  createVote: {\n    id: string;\n    link: Link;\n    user: User;\n  };\n}\n\nexport const ALL_LINKS_SEARCH_QUERY = gql`\n  query AllLinksSearchQuery($searchText: String!) {\n    allLinks(filter: {\n      OR: [{\n        url_contains: $searchText\n      }, {\n        description_contains: $searchText\n      }]\n    }) {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface AllLinksSearchQueryResponse {\n  loading: boolean;\n  allLinks: Link[];\n  _allLinksMeta: {\n    count: number\n  };\n}\n\nexport const NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    Link(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        url\n        description\n        createdAt\n        voteCount\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewLinkSubcriptionResponse {\n  node: Link;\n}\n\nexport const NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    Vote(filter: {\n      mutation_in: [CREATED]\n    }) {\n      node {\n        id\n        link {\n          id\n          url\n          description\n          createdAt\n          postedBy {\n            id\n            name\n          }\n          votes {\n            id\n            user {\n              id\n            }\n          }\n        }\n        user {\n          id\n        }\n      }\n    }\n  }\n`;\n\nexport interface NewVoteSubcriptionResponse {\n  node: Vote;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UniqueId.html":{"url":"interfaces/UniqueId.html","title":"interface - UniqueId","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UniqueId\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                Interface to be implemented by classes\nholding a application-wide unique id,\nnot just a, for example, an id unique within\na single table\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/types.ts:12\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatedAt.html":{"url":"interfaces/UpdatedAt.html","title":"interface - UpdatedAt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdatedAt\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/types.ts\n        \n\n            \n                Description\n            \n            \n                Interface for classes that hold the datetime-value\nof when they where last updated.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/app/types.ts:28\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface UniqueId {\n    id?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of their creation\n*/\nexport interface CreatedAt {\n    createdAt?: string;\n}\n\n/**\n * Interface for classes that hold the datetime-value\n * of when they where last updated.\n*/\nexport interface UpdatedAt {\n    updatedAt?: string;\n}\n\n/**\n * ManagedByGraphCool - This class should be used\n * to be extended by all classes representing graphql\n * schema-types managed by the graph.cool\n * backend-framework\n *\n * Class defines the common properties\n * id, createdAt and updated at that should\n * by available on every graphql schema-type\n * defined for this application and should be\n * extended by every according typescript 'graphql-type'\n * object-instance.\n*/\n export class ManagedByGraphCool implements UniqueId, CreatedAt, UpdatedAt {\n    /**\n     * Unique instance id managed by the graphcool-framework\n     */\n    id?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was created.\n     * Managed by the graphcool-framework\n     */\n    createdAt?: string;\n    /**\n     * The datetime the particuler\n     * graphql schema-type instance was updated.\n     * Managed by the graphcool-framework\n     */\n    updatedAt?: string;\n}\n\n/**\n * Class to hold data available at graphql schema-type\n * Link, representing this schema-type within this application\n*/\nexport class Link extends ManagedByGraphCool {\n    /**\n     * A short headline describing what this link\n     * is about.\n     */\n    description?: string;\n    /**\n     * The actual url of the submitted link\n     */\n    url?: string;\n    /**\n     * Reference to the user who submitted the link\n     */\n    postedBy?: User;\n    /**\n     *  References to the upvotes casted on the link\n     */\n    votes?: Vote[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    voteCount?: number;\n    /**\n     * Reference to the comments received on the link\n     */\n    comments?: Comment[];\n    /**\n     * Property to hold the count of casted votes\n     * so links can be ordered by votes on the sever-side\n     * by graphcool-framework default methodes.\n     */\n    commentCount?: number;\n}\n\n/**\n * User - A User represents an authendicated Visitor of\n * the application and receives access to additional features\n * whitin the application\n *\n * Class to hold data available at graphql schema-type\n * User, representing this schema-type within this application\n*/\nexport class User extends ManagedByGraphCool {\n    /**\n     * The unique nickname used by the user within the application\n     */\n    name?: string;\n    /**\n     * The unique email-adresse used by the user\n     * to be verified within the application\n     */\n    email?: string;\n    /**\n     * The links submitted by the user\n     */\n    links?: Link[];\n    /**\n     * References a users votes casted on links\n     */\n    votes?: Vote[];\n    /**\n     * The users comments on submitted links\n     */\n    comments?: Comment[];\n    /**\n     * References a users votes casted on comments\n     */\n    commentUpVotes?: CommentVote[];\n}\n\n/**\n * Vote - A Vote is a flag indicating that a user liked\n * and/or found the contents of a submitted link useful\n *\n * Class to hold data available at graphql schema-type\n * Vote, representing this schema-type within this application\n */\nexport class Vote extends ManagedByGraphCool {\n    /**\n     * Reference to the user that casted that vote\n     */\n    user?: User;\n    /**\n     * Reference to the link the vote was casted on\n     */\n    link?: Link;\n}\n\n/**\n * Comment - A Comment represents a users response\n * to a posted link or comment\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class Comment extends ManagedByGraphCool {\n    /**\n     * The message to replied to a link or comment\n     */\n    message?: string;\n    /**\n     * As comments can be casted on comments, this flag\n     * should be used to signal how deep the casted comment \n     * is nested in the comment-tree structure\n     */\n    depth?: number;\n    /**\n     * Reference to the link a comment is replied to\n     */\n    link?: Link;\n    /**\n     * Reference to the user who casted the event\n     */\n    user?: User;\n    /**\n     * References the votes casted on the comment\n     */\n    votes?: CommentVote[];\n    /**\n     * Reference to the parent comment of a\n     * reply to a comment\n     */\n    parent?: Comment;\n    /**\n     * References the children, or comments casted as reply\n     * to a comment\n     */\n    responses?: Comment[];\n}\n\n/**\n * CommentVote - A CommentVote represents that a user liked and/or\n * found the response to link or comment useful.\n *\n * Class to hold data available at graphql schema-type\n * Comment, representing this schema-type within this application\n */\nexport class CommentVote extends ManagedByGraphCool {\n    /**\n     * Reference to the user casting the vote on a comment\n     */\n    user?: User;\n    /**\n     * Reference to the comment a user casted the vote on\n     */\n    comment?: Comment;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            timeDifference\n                        \n                        \n                            timeDifferenceForDate\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.utils.ts\n    \n                \n                \n                    \n                        \n                            \n                            \n                                \n                                timeDifference\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    timeDifference(current: number, previous: number)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        current\n                                                        \n                                                            \n                                                                        number\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                                    \n                                                        previous\n                                                        \n                                                            \n                                                                        number\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            \n                            \n                                \n                                timeDifferenceForDate\n                                \n                                \n                            \n                        \n                    \n                    \n                        \n    timeDifferenceForDate(date: string)\n                        \n                    \n    \n    \n    \n                    \n                        \n    \n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                        date\n                                                        \n                                                            \n                                                                        string\n                                                            \n                                                        \n                                                        \n                                                                no\n                                                        \n                                                        \n    \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.utils.ts\n            \n            \n                function\n            \n            \n                timeDifference\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.utils.ts\n            \n            \n                function\n            \n            \n                timeDifferenceForDate\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/component/create-link/create-link.component.ts\n            \n            \n                component\n            \n            \n                CreateLinkComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/component/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/component/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/component/link-item-list/link-item-list.component.ts\n            \n            \n                component\n            \n            \n                LinkItemListComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/component/link-item/link-item.component.ts\n            \n            \n                component\n            \n            \n                LinkItemComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/component/link-item/link-item.component.ts\n            \n            \n                class\n            \n            \n                LinkUpvoteEvent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/component/main/main.component.ts\n            \n            \n                component\n            \n            \n                MainComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/component/search/search.component.ts\n            \n            \n                component\n            \n            \n                SearchComponent\n            \n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                    src/app/component/top/top.component.ts\n            \n            \n                component\n            \n            \n                TopComponent\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                    src/app/constants.ts\n            \n            \n                variable\n            \n            \n                FG_LINKS_PER_PAGE\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/constants.ts\n            \n            \n                variable\n            \n            \n                GC_AUTH_TOKEN\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/constants.ts\n            \n            \n                variable\n            \n            \n                GC_USER_ID\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                AllLinkQueryResponse\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                AllLinksSearchQueryResponse\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                CreateLinkMutationResponse\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                CreateUserMutationResponse\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                CreateVoteMutationResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                NewLinkSubcriptionResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                NewVoteSubcriptionResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                interface\n            \n            \n                SigninUserMutationResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                ALL_LINKS_QUERY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                ALL_LINKS_SEARCH_QUERY\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                CREATE_LINK_MUTATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                CREATE_USER_MUTATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                CREATE_VOTE_MUTATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                NEW_LINKS_SUBSCRIPTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                NEW_VOTES_SUBSCRIPTION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/graphql.ts\n            \n            \n                variable\n            \n            \n                SIGNIN_USER_MUTATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                Comment\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                CommentVote\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                Link\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                ManagedByGraphCool\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                class\n            \n            \n                Vote\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                interface\n            \n            \n                CreatedAt\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                interface\n            \n            \n                UniqueId\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/types.ts\n            \n            \n                interface\n            \n            \n                UpdatedAt\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
